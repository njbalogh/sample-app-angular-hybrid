{"version":3,"file":"sampleapp.js","sources":["webpack:///./app/mymessages/mymessages.module.ts","webpack:///./app/global/global.module.ts","webpack:///./app/home/home.module.ts","webpack:///./app/prefs/prefs.component.ts","webpack:///./app/angularJSModule.ts","webpack:///./$_gendir/~/@uirouter/angular/lib/directives/uiView.ngfactory.ts?d6a6","webpack:///./app/util/util.ts","webpack:///./~/@uirouter/angular-hybrid/lib/angular-hybrid.js","webpack:///./$_gendir/app/angularModule.ngfactory.ts","webpack:///./app/util/ga.ts","webpack:///./$_gendir/app/prefs/prefs.component.ngfactory.ts","webpack:///./$_gendir/~/@uirouter/angular-hybrid/lib/angular-hybrid.ngfactory.ts","webpack:///./app/angularModule.ts","webpack:///./app/global/appConfig.service.ts","webpack:///./app/global/auth.service.ts","webpack:///./app/global/dataSources.service.ts","webpack:///./app/global/dialog.directive.ts","webpack:///./app/global/dialog.service.ts","webpack:///./app/global/index.ts","webpack:///./app/global/requiresAuth.hook.ts","webpack:///./app/home/app.component.ts","webpack:///./app/home/app.states.ts","webpack:///./app/home/home.component.ts","webpack:///./app/home/index.ts","webpack:///./app/home/login.component.ts","webpack:///./app/home/welcome.component.ts","webpack:///./app/main.ts","webpack:///./app/mymessages/compose.component.ts","webpack:///./app/mymessages/directives/index.ts","webpack:///./app/mymessages/directives/sortMessages.directive.ts","webpack:///./app/mymessages/filters/index.ts","webpack:///./app/mymessages/filters/messageBody.filter.ts","webpack:///./app/mymessages/folderList.component.ts","webpack:///./app/mymessages/index.ts","webpack:///./app/mymessages/message.component.ts","webpack:///./app/mymessages/messageList.component.ts","webpack:///./app/mymessages/messageTable.component.ts","webpack:///./app/mymessages/mymessages.component.ts","webpack:///./app/mymessages/mymessages.states.ts","webpack:///./app/mymessages/services/index.ts","webpack:///./app/mymessages/services/messagesListUI.service.ts","webpack:///./app/prefs/prefs.module.ts","webpack:///./app/prefs/prefs.states.ts","webpack:///./app/util/sessionStorage.ts"],"sourcesContent":["import * as angular from 'angular';\n\n// The angularjs module for 'mymessages'\n// This module is imported in each of the\nexport const mymessagesModule = angular.module('mymessages', ['ui.router']);\n\n\n\n// WEBPACK FOOTER //\n// ./app/mymessages/mymessages.module.ts","import * as angular from 'angular';\nexport const globalModule =  angular.module('global', ['ui.router']);\n\n\n\n// WEBPACK FOOTER //\n// ./app/global/global.module.ts","import * as angular from 'angular';\nexport const homeModule = angular.module('main', ['ui.router']);\n\n\n\n// WEBPACK FOOTER //\n// ./app/home/home.module.ts","import { Component, Inject } from '@angular/core';\n\n@Component({\n  selector: 'prefs-component',\n  template: `\n      <div>\n          <button class=\"btn btn-primary\" (click)=\"reset()\"><i class=\"fa fa-recycle\"></i> <span>Reset All Data</span></button>\n      </div>\n\n      <div>\n          <label for=\"restDelay\">Simulated REST API delay (ms)</label>\n          <input type=\"text\" name=\"restDelay\" [(ngModel)]=\"prefs.restDelay\">\n          <button class=\"btn btn-primary\" (click)=\"savePrefs()\">Save</button>\n      </div>\n  `,\n})\nexport class PrefsComponent {\n  prefs;\n\n  constructor(@Inject('AppConfig') public AppConfig) { }\n\n  ngOnInit() {\n    this.prefs = {\n      restDelay: this.AppConfig.restDelay\n    }\n  }\n\n  /** Clear out the session storage */\n  reset() {\n    sessionStorage.clear();\n    document.location.reload(true);\n  }\n\n  /** After saving preferences to session storage, reload the entire application */\n  savePrefs() {\n    Object.assign(this.AppConfig, { restDelay: this.prefs.restDelay }).save();\n    document.location.reload(true);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./app/prefs/prefs.component.ts","/**\n * This file imports the third party library dependencies, then creates the angular module \"demo\"\n * and exports it.\n */\n\n// External dependencies\nimport * as angular from \"angular\";\nimport uiRouter from \"@uirouter/angularjs\";\nimport { upgradeModule } from \"@uirouter/angular-hybrid\";\n\n// Feature Modules\nimport { globalModule } from \"./global/index\";\nimport { homeModule } from \"./home/index\";\nimport { mymessagesModule } from './mymessages/index';\n\n// Create the angular 1 module \"demo\".\n//\n// Since it is exported, other parts of the application (in other files) can then import it and register things.\n// In bootstrap.js, the module is imported, and the components, services, and states are registered.\nexport const sampleAppModuleAngularJS = angular.module(\"sampleapp\", [\n  uiRouter,\n  upgradeModule.name,\n  homeModule.name,\n  globalModule.name,\n  mymessagesModule.name,\n]);\n\n// Apply some global configuration...\n\n// If the user enters a URL that doesn't match any known URL (state), send them to `/welcome`\nconst otherwiseConfigBlock = ['$urlRouterProvider', $urlRouterProvider => { $urlRouterProvider.otherwise(\"/welcome\"); }];\nsampleAppModuleAngularJS.config(otherwiseConfigBlock);\n\n// Enable tracing of each TRANSITION... (check the javascript console)\n\n// This syntax `$trace.enable(1)` is an alternative to `$trace.enable(\"TRANSITION\")`.\n// Besides \"TRANSITION\", you can also enable tracing for : \"RESOLVE\", \"HOOK\", \"INVOKE\", \"UIVIEW\", \"VIEWCONFIG\"\nconst traceRunBlock = ['$trace', $trace => { $trace.enable(1); }];\nsampleAppModuleAngularJS.run(traceRunBlock);\n\n\n// WEBPACK FOOTER //\n// ./app/angularJSModule.ts","/**\n * @fileoverview This file is generated by the Angular template compiler.\n * Do not edit.\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}\n */\n /* tslint:disable */\n\n\nimport * as import0 from '@angular/core';\nimport * as import1 from '@angular/common';\nimport * as import2 from '@uirouter/angular/lib/directives/uiView';\nimport * as import3 from '@uirouter/core/lib/router';\nconst styles_UIView:any[] = ([] as any[]);\nexport const RenderType_UIView:import0.RendererType2 = import0.ɵcrt({\n  encapsulation: 2,\n  styles: styles_UIView,\n  data: {}\n}\n);\nfunction View_UIView_1(l:any):import0.ɵViewDefinition {\n  return import0.ɵvid(0,[(l()(),import0.ɵand(0,(null as any),(null as any),0))],(null as any),(null as any));\n}\nfunction View_UIView_2(l:any):import0.ɵViewDefinition {\n  return import0.ɵvid(0,[\n    import0.ɵncd((null as any),0),\n    (l()(),import0.ɵand(0,(null as any),(null as any),0))\n  ]\n  ,(null as any),(null as any));\n}\nexport function View_UIView_0(l:any):import0.ɵViewDefinition {\n  return import0.ɵvid(0,[\n    import0.ɵqud(402653184,1,{componentTarget: 0}),\n    (l()(),import0.ɵted((null as any),['\\n    '])),\n    (l()(),import0.ɵand(16777216,[\n      [\n        1,\n        3\n      ]\n      ,\n      [\n        'componentTarget',\n        2\n      ]\n\n    ]\n    ,(null as any),0,(null as any),View_UIView_1)),\n    (l()(),import0.ɵted((null as any),['\\n    '])),\n    (l()(),import0.ɵand(16777216,(null as any),(null as any),1,(null as any),View_UIView_2)),\n    import0.ɵdid(16384,(null as any),0,import1.NgIf,[\n      import0.ViewContainerRef,\n      import0.TemplateRef\n    ]\n      ,{ngIf: [\n        0,\n        'ngIf'\n      ]\n    },(null as any)),\n    (l()(),import0.ɵted((null as any),['\\n  ']))\n  ]\n  ,(ck,v) => {\n    var co:import2.UIView = v.component;\n    const currVal_0:boolean = !co.componentRef;\n    ck(v,5,0,currVal_0);\n  },(null as any));\n}\nfunction View_UIView_Host_0(l:any):import0.ɵViewDefinition {\n  return import0.ɵvid(0,[\n    (l()(),import0.ɵeld(16777216,(null as any),(null as any),1,'ui-view',([] as any[]),(null as any),(null as any),(null as any),View_UIView_0,RenderType_UIView)),\n    import0.ɵdid(245760,(null as any),0,import2.UIView,[\n      import3.UIRouter,\n      'UIView.PARENT_INJECT',\n      import0.ViewContainerRef\n    ]\n    ,(null as any),(null as any))\n  ]\n  ,(ck,v) => {\n    ck(v,1,0);\n  },(null as any));\n}\nexport const UIViewNgFactory:import0.ComponentFactory<import2.UIView> = import0.ɵccf('ui-view, [ui-view]',import2.UIView,View_UIView_Host_0,{\n  name: 'name',\n  _name: 'ui-view'\n}\n,{},['*']);\n//# sourceMappingURL=data:application/json;base64,eyJmaWxlIjoiL1VzZXJzL2N0aGllbGVuL3Byb2plY3RzL3Vpcm91dGVyL3NhbXBsZS1hcHAtbmcxLXRvLW5nMi9ub2RlX21vZHVsZXMvQHVpcm91dGVyL2FuZ3VsYXIvbGliL2RpcmVjdGl2ZXMvdWlWaWV3Lm5nZmFjdG9yeS50cyIsInZlcnNpb24iOjMsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIm5nOi8vL1VzZXJzL2N0aGllbGVuL3Byb2plY3RzL3Vpcm91dGVyL3NhbXBsZS1hcHAtbmcxLXRvLW5nMi9ub2RlX21vZHVsZXMvQHVpcm91dGVyL2FuZ3VsYXIvbGliL2RpcmVjdGl2ZXMvdWlWaWV3LmQudHMiLCJuZzovLy9Vc2Vycy9jdGhpZWxlbi9wcm9qZWN0cy91aXJvdXRlci9zYW1wbGUtYXBwLW5nMS10by1uZzIvbm9kZV9tb2R1bGVzL0B1aXJvdXRlci9hbmd1bGFyL2xpYi9kaXJlY3RpdmVzL3VpVmlldy5kLnRzLlVJVmlldy5odG1sIiwibmc6Ly8vVXNlcnMvY3RoaWVsZW4vcHJvamVjdHMvdWlyb3V0ZXIvc2FtcGxlLWFwcC1uZzEtdG8tbmcyL25vZGVfbW9kdWxlcy9AdWlyb3V0ZXIvYW5ndWxhci9saWIvZGlyZWN0aXZlcy91aVZpZXcuZC50cy5VSVZpZXdfSG9zdC5odG1sIl0sInNvdXJjZXNDb250ZW50IjpbIiAiLCJcbiAgICA8bmctdGVtcGxhdGUgI2NvbXBvbmVudFRhcmdldD48L25nLXRlbXBsYXRlPlxuICAgIDxuZy1jb250ZW50ICpuZ0lmPVwiIWNvbXBvbmVudFJlZlwiPjwvbmctY29udGVudD5cbiAgIiwiPHVpLXZpZXc+PC91aS12aWV3PiJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztnQkNFSTs7Ozs7Ozs7SUFGSjtJQUNJO01BQUE7UUFBQTtRQUFBO01BQUE7O01BQUE7UUFBQTtRQUFBO01BQUE7O0lBQUE7S0FBQTtJQUE0QztJQUM1QztnQkFBQTs7O0lBQUE7T0FBQTtRQUFBO1FBQUE7TUFBQTtJQUFBO0lBQStDOzs7O0lBQW5DO0lBQVosU0FBWSxTQUFaOzs7OztJQ0ZKO2dCQUFBOztNQUFBOztJQUFBO0tBQUE7OztJQUFBOzs7Ozs7OyJ9\n\n\n\n// WEBPACK FOOTER //\n// ./$$_gendir/~/@uirouter/angular/lib/directives/uiView.ngfactory.ts","/** Some utility functions used by the application */\n\nexport const setProp = (obj, key, val) => { obj[key] = val; return obj; };\nexport const pushToArr = (array, item) => { array.push(item); return array; };\nexport const uniqReduce = (arr, item) => arr.indexOf(item) !== -1 ? arr : pushToArr(arr, item);\nexport const flattenReduce = (arr, item) => arr.concat(item);\nlet guidChar = (c) => c !== 'x' && c !== 'y' ? '-' : Math.floor(Math.random()*16).toString(16).toUpperCase();\nexport const guid = () => \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".split(\"\").map(guidChar).join(\"\");\n\n\n\n// WEBPACK FOOTER //\n// ./app/util/util.ts","import * as angular from 'angular';\nimport { Component, ElementRef, Inject, Injector, Input, NgModule } from '@angular/core';\nimport { downgradeComponent, UpgradeModule } from '@angular/upgrade/static';\nimport { forEach, Resolvable, StateRegistry, UIRouter } from '@uirouter/core';\nimport { applyModuleConfig, NATIVE_INJECTOR_TOKEN, ng2LazyLoadBuilder, Ng2ViewConfig, UIView, _UIROUTER_SERVICE_PROVIDERS, UIROUTER_MODULE_TOKEN, UIROUTER_ROOT_MODULE, UIRouterModule, } from '@uirouter/angular';\nimport { Ng1ViewConfig } from '@uirouter/angularjs';\nimport { UIRouterRx } from '@uirouter/rx';\n/**\n * Create a ng1 module for the ng1 half of the hybrid application to depend on.\n *\n * Example:\n * const myApp = angular.module('myApp', ['ui.router.upgrade']);\n */\nexport var upgradeModule = angular.module('ui.router.upgrade', ['ui.router']);\n/**\n * UIViewNgUpgrade is a component bridge from ng1 ui-view to ng2 ui-view\n *\n * When a ui-router for ng1 is registering a state it checks if a view's\n * `component:` is an ng2 Component class. If so, it creates a special ng1 template\n * which references this component, i.e., <ui-view-ng-upgrade></ui-view-ng-upgrade>\n *\n * See that code by searching ng1-to-ng2 source for: \"$stateProvider.decorator\"\n *\n * ---\n *\n * ng1-to-ng2 component bridge process:\n *\n * 1)\n * When an ng1 template creates a ui-view which is targeted by a ng2 Component,\n *\n * ```\n * <a ui-sref=\"foo\">Go to foo</a>\n * <div ui-view> <!-- ui-view created in ng1 template -->\n * </div> <!-- targeted with { component: Ng2RoutedComponent } -->\n * ```\n *\n * the state decorator spits out a custom template.  That template loads this\n * ng2 Component adapter as a downgraded-to-ng1 directive.\n *\n * ```\n * <a ui-sref=\"foo\">Go to foo</a>\n * <div ui-view> <!-- decorated template references the downgraded component -->\n *   <ui-view-ng-upgrade> <!-- downgraded adapter component -->\n *   </ui-view-ng-upgrade>\n * </div>\n * ```\n *\n * This downgraded ng2 Component then creates a child UIView (ng2 component)\n *\n * ```\n * <a ui-sref=\"foo\">Go to foo</a>\n * <div ui-view> <!-- custom template references the downgraded component -->\n *   <ui-view-ng-upgrade> <!-- ng2 component adapter downgraded to ng1-->\n *     <ui-view> <!-- pure ng2 ui-view -->\n *      </ui-view>\n *   </ui-view-ng-upgrade>\n * </div>\n * ```\n *\n * which in turn is filled with the routed ng2 component.\n *\n * ```\n * <a ui-sref=\"foo\">Go to foo</a>\n * <div ui-view> <!-- ng1 ui-view -->\n *   <ui-view-ng-upgrade> <!-- ng2 component adapter (downgraded to ng1)-->\n *     <ui-view> <!-- pure ng2 ui-view -->\n *       <ng2-routed-component> <!-- ng2 component hosted in ng2 ui-view -->\n *         <h1>ng2 routed component contents</h1>\n *       </ng2-routed-component>\n *     </ui-view>\n *   </ui-view-ng-upgrade>\n * </div>\n * ```\n *\n * This adapter exposes exposes the parent view context (ParentUIViewInject)\n * as an ng2 DI Provider, which the nested ng2 UIView requires.\n *\n * It gets the ParentUIViewContext information (from the parent ng1 ui-view) by walking\n * up the DOM and grabbing the .data('$uiView') which the ng1 ui-view directive exposes.\n */\nvar UIViewNgUpgrade = (function () {\n    function UIViewNgUpgrade(ref, parent, registry // access the root state\n    ) {\n        // From the ui-view-ng-upgrade component's element ref, walk up the DOM two elements...\n        // There will first be an ng1 ui-view which hosts this element, and then that ui-view's parent element.\n        // That (parent) element has access to the proper \"parent viewcontext\"\n        // The ng2 ui-view component is inside this ui-view-ng-upgrade directive, which is inside the ng1 \"host\" ui-view.\n        // Both ui-views share the same \"view context\" information (the view's fqn and created-by-state context information)\n        var ng1elem = angular.element(ref.nativeElement).parent().parent();\n        // Expose getters on PARENT_INJECT for context (creation state) and fqn (view address)\n        // These will be used by further nested UIView\n        Object.defineProperty(parent, \"context\", {\n            get: function () {\n                var data = ng1elem['inheritedData']('$uiView');\n                return (data && data.$cfg) ? data.$cfg.viewDecl.$context : registry.root();\n            },\n            enumerable: true\n        });\n        Object.defineProperty(parent, \"fqn\", {\n            get: function () {\n                var data = ng1elem['inheritedData']('$uiView');\n                return (data && data.$uiView) ? data.$uiView.fqn : null;\n            },\n            enumerable: true\n        });\n    }\n    return UIViewNgUpgrade;\n}());\nexport { UIViewNgUpgrade };\nUIViewNgUpgrade.decorators = [\n    { type: Component, args: [{\n                selector: 'ui-view-ng-upgrade',\n                template: \"<ui-view [name]=\\\"name\\\"></ui-view>\",\n                // provide a blank object as PARENT_INJECT.\n                // The component will add property getters when it is constructed.\n                viewProviders: [{ provide: UIView.PARENT_INJECT, useValue: {} }],\n            },] },\n];\n/** @nocollapse */\nUIViewNgUpgrade.ctorParameters = function () { return [\n    { type: ElementRef, },\n    { type: undefined, decorators: [{ type: Inject, args: [UIView.PARENT_INJECT,] },] },\n    { type: StateRegistry, },\n]; };\nUIViewNgUpgrade.propDecorators = {\n    'name': [{ type: Input },],\n};\n/**********************************\n * Ng2 @NgModule and bootstrap code\n **********************************/\n// Register the ng1 DI '$uiRouter' object as an ng2 Provider.\nexport function uiRouterUpgradeFactory(router, injector) {\n    var modules = injector.get(UIROUTER_MODULE_TOKEN, []);\n    modules.forEach(function (module) { return applyModuleConfig(router, injector, module); });\n    return router;\n}\nexport function getUIRouter($injector) {\n    return $injector.get('$uiRouter');\n}\nexport function getParentUIViewInject(r) {\n    return { fqn: null, context: r.root() };\n}\n/**\n * This NgModule should be added to the root module of the hybrid app.\n */\nvar UIRouterUpgradeModule = (function () {\n    function UIRouterUpgradeModule() {\n    }\n    return UIRouterUpgradeModule;\n}());\nexport { UIRouterUpgradeModule };\nUIRouterUpgradeModule.decorators = [\n    { type: NgModule, args: [{\n                imports: [UIRouterModule, UpgradeModule],\n                declarations: [UIViewNgUpgrade],\n                providers: [\n                    // @uirouter/angular code will use the ng1 $uiRouter instance instead of creating its own.\n                    { provide: '$uiRouter', useFactory: getUIRouter, deps: ['$injector'] },\n                    { provide: UIRouter, useFactory: uiRouterUpgradeFactory, deps: ['$uiRouter', Injector] },\n                    { provide: UIROUTER_ROOT_MODULE, useValue: {}, multi: true },\n                    { provide: UIView.PARENT_INJECT, useFactory: getParentUIViewInject, deps: [StateRegistry] }\n                ].concat(_UIROUTER_SERVICE_PROVIDERS),\n                entryComponents: [\n                    UIViewNgUpgrade\n                ],\n                exports: [UIViewNgUpgrade, UIRouterModule]\n            },] },\n];\n/** @nocollapse */\nUIRouterUpgradeModule.ctorParameters = function () { return []; };\n// Downgrade the UIViewNgUpgrade ng2 Component to an ng1 directive.\n// The directive is used in a (generated) view template by the (host) ng1 ui-router,\n// whenever it finds a view configured with a `component: <Ng2ComponentClass>`\nupgradeModule.directive(\"uiViewNgUpgrade\", downgradeComponent({\n    component: UIViewNgUpgrade,\n    inputs: ['name']\n}));\nupgradeModule.run(['$injector', function (ng1Injector) {\n        var $uiRouter = ng1Injector.get('$uiRouter');\n        /** Add support for observable state and param changes */\n        $uiRouter.plugin(UIRouterRx);\n        // Expose a merged ng1/ng2 injector as a Resolvable (on the root state).\n        // This mimics how ui-router-ng2 exposes the root ng2 Injector, but\n        // it retrieves from ng1 injector first, then ng2 injector if the token isn't found.\n        var mergedInjector = {\n            get: function (token, ng2NotFoundValue) {\n                var ng2Injector = ng1Injector.get('$$angularInjector');\n                return (ng1Injector.has(token) && ng1Injector.get(token)) || ng2Injector.get(token, ng2NotFoundValue);\n            }\n        };\n        var ng2InjectorResolvable = Resolvable.fromData(NATIVE_INJECTOR_TOKEN, mergedInjector);\n        $uiRouter.stateRegistry.root().resolvables.push(ng2InjectorResolvable);\n    }]);\n/** Adds support for `loadChildren`: Angular NgModule lazy loading via @gntools/webpack */\nupgradeModule.config(['$stateRegistryProvider', function ($stateRegistry) {\n        $stateRegistry.decorator('lazyLoad', ng2LazyLoadBuilder);\n    }]);\n/**\n * Define a stateProvider `views` builder decorator.\n * The decorator first applies the standard views builder function.\n * Then it finds any view components which are **actually** a Ng2 Component Class.\n * It overwrites that view's config with a ng1-to-ng2 hybrid config.\n *\n * In place of the template provider, it simply puts a <ui-view-ng-upgrade/> component\n * which that provides a ng1 -> ng2 boundary in the component tree.\n */\nupgradeModule.config(['$stateRegistryProvider', function ($stateRegistry) {\n        $stateRegistry.decorator('views', function (state, parentFn) {\n            var views = parentFn(state);\n            forEach(views, function (viewDecl, viewName) {\n                if (viewDecl.$type === 'ng1-to-ng2' || typeof viewDecl.component === 'function') {\n                    // Update the view config.\n                    // Override default ng1 `component:` behavior (of defining a templateProvider)\n                    // with a <ui-view-ng-upgrade> adapter directive template\n                    viewDecl.$type = \"ng1-to-ng2\";\n                    viewDecl.templateProvider = null;\n                    viewDecl.template = \"<ui-view-ng-upgrade name='\" + viewDecl.$uiViewName + \"'></ui-view-ng-upgrade>\";\n                }\n            });\n            return views;\n        });\n    }]);\n// UI-Router ViewConfig factories take a view declaration object from a state.views: { foo: <ViewDeclaration> }\n// and return a runtime config object (a ViewConfig)\nupgradeModule.run(['$view', '$templateFactory', function ($view, $templateFactory) {\n        // Register a ViewConfig factory for views of type `ng2`\n        $view._pluginapi._viewConfigFactory('ng2', function (path, config) { return new Ng2ViewConfig(path, config); });\n        // Register a ViewConfig factory for views of type `ng1-to-ng2`.\n        // Returns both an ng1 config and an ng2 config allowing either ng1 or ng2 ui-view components to be targeted.\n        $view._pluginapi._viewConfigFactory('ng1-to-ng2', function (path, config) {\n            var ng1ViewConfig = new Ng1ViewConfig(path, Object.assign({}, config, { $type: 'ng1' }), $templateFactory);\n            var ng2ViewConfig = new Ng2ViewConfig(path, Object.assign({}, config, { $type: 'ng2' }));\n            return [ng2ViewConfig, ng1ViewConfig];\n        });\n    }]);\n//# sourceMappingURL=angular-hybrid.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/@uirouter/angular-hybrid/lib/angular-hybrid.js\n// module id = 87\n// module chunks = 1","/**\n * @fileoverview This file is generated by the Angular template compiler.\n * Do not edit.\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}\n */\n /* tslint:disable */\n\n\nimport * as import0 from '@angular/core';\nimport * as import1 from '../../app/angularModule';\nimport * as import2 from '@angular/common';\nimport * as import3 from '@angular/platform-browser';\nimport * as import4 from '@angular/upgrade/static';\nimport * as import5 from '@uirouter/angular/lib/uiRouterNgModule';\nimport * as import6 from '@uirouter/angular-hybrid/lib/angular-hybrid';\nimport * as import7 from '@angular/forms';\nimport * as import8 from '../../app/prefs/prefs.module';\nimport * as import9 from '../../$$_gendir/node_modules/@uirouter/angular/lib/directives/uiView.ngfactory';\nimport * as import10 from '../../$$_gendir/node_modules/@uirouter/angular-hybrid/lib/angular-hybrid.ngfactory';\nimport * as import11 from './prefs/prefs.component.ngfactory';\nimport * as import12 from '@uirouter/angular/lib/providers';\nimport * as import13 from '../../app/prefs/prefs.component';\nimport * as import14 from '@uirouter/core/lib/router';\nimport * as import15 from '@uirouter/core/lib/state/stateRegistry';\nimport * as import16 from '@uirouter/core/lib/state/stateService';\nimport * as import17 from '@uirouter/core/lib/transition/transitionService';\nimport * as import18 from '@uirouter/core/lib/url/urlMatcherFactory';\nimport * as import19 from '@uirouter/core/lib/url/urlRouter';\nimport * as import20 from '@uirouter/core/lib/url/urlService';\nimport * as import21 from '@uirouter/core/lib/view/view';\nimport * as import22 from '@uirouter/core/lib/globals';\nimport * as import23 from '@angular/router';\nclass SampleAppModuleAngularInjector extends import0.ɵNgModuleInjector<import1.SampleAppModuleAngular> {\n  _CommonModule_0:import2.CommonModule;\n  _ErrorHandler_1:any;\n  _APP_INITIALIZER_2:any[];\n  _ApplicationInitStatus_3:import0.ApplicationInitStatus;\n  _ɵf_4:import0.ɵf;\n  _ApplicationRef_5:any;\n  _ApplicationModule_6:import0.ApplicationModule;\n  _BrowserModule_7:import3.BrowserModule;\n  _UpgradeModule_8:import4.UpgradeModule;\n  _UIRouterModule_9:import5.UIRouterModule;\n  _UIRouterUpgradeModule_10:import6.UIRouterUpgradeModule;\n  _ɵba_11:import7.ɵba;\n  _FormsModule_12:import7.FormsModule;\n  _PrefsModule_13:import8.PrefsModule;\n  _SampleAppModuleAngular_14:import1.SampleAppModuleAngular;\n  __LOCALE_ID_15:any;\n  __NgLocalization_16:import2.NgLocaleLocalization;\n  __Compiler_17:import0.Compiler;\n  __APP_ID_18:any;\n  __IterableDiffers_19:any;\n  __KeyValueDiffers_20:any;\n  __DomSanitizer_21:import3.ɵe;\n  __Sanitizer_22:any;\n  __HAMMER_GESTURE_CONFIG_23:import3.HammerGestureConfig;\n  __EVENT_MANAGER_PLUGINS_24:any[];\n  __EventManager_25:import3.EventManager;\n  __ɵDomSharedStylesHost_26:import3.ɵDomSharedStylesHost;\n  __ɵDomRendererFactory2_27:import3.ɵDomRendererFactory2;\n  __RendererFactory2_28:any;\n  __ɵSharedStylesHost_29:any;\n  __Testability_30:import0.Testability;\n  __Meta_31:import3.Meta;\n  __Title_32:import3.Title;\n  ___injector_33:any;\n  ___rootScope_34:any;\n  ___compile_35:any;\n  ___parse_36:any;\n  ___uiRouter_37:any;\n  __UIRouter_38:any;\n  _UIROUTER_ROOT_MODULE_39:any[];\n  __StateRegistry_40:any;\n  __UIView_PARENT_INJECT_41:any;\n  __StateService_42:any;\n  __TransitionService_43:any;\n  __UrlMatcherFactory_44:any;\n  __UrlRouter_45:any;\n  __UrlService_46:any;\n  __ViewService_47:any;\n  __UIRouterGlobals_48:any;\n  __ɵi_49:import7.ɵi;\n  _UIROUTER_MODULE_TOKEN_50:any[];\n  _ROUTES_51:any[];\n  __NgModuleFactoryLoader_52:import0.SystemJsNgModuleLoader;\n  __DialogService_53:any;\n  __Contacts_54:any;\n  constructor(parent:import0.Injector) {\n    super(parent,[\n      import9.UIViewNgFactory,\n      import10.UIViewNgUpgradeNgFactory,\n      import11.PrefsComponentNgFactory\n    ]\n    ,([] as any[]));\n  }\n  get _LOCALE_ID_15():any {\n    if ((this.__LOCALE_ID_15 == null)) { (this.__LOCALE_ID_15 = import0.ɵn(this.parent.get(import0.LOCALE_ID,(null as any)))); }\n    return this.__LOCALE_ID_15;\n  }\n  get _NgLocalization_16():import2.NgLocaleLocalization {\n    if ((this.__NgLocalization_16 == null)) { (this.__NgLocalization_16 = new import2.NgLocaleLocalization(this._LOCALE_ID_15)); }\n    return this.__NgLocalization_16;\n  }\n  get _Compiler_17():import0.Compiler {\n    if ((this.__Compiler_17 == null)) { (this.__Compiler_17 = new import0.Compiler()); }\n    return this.__Compiler_17;\n  }\n  get _APP_ID_18():any {\n    if ((this.__APP_ID_18 == null)) { (this.__APP_ID_18 = import0.ɵg()); }\n    return this.__APP_ID_18;\n  }\n  get _IterableDiffers_19():any {\n    if ((this.__IterableDiffers_19 == null)) { (this.__IterableDiffers_19 = import0.ɵl()); }\n    return this.__IterableDiffers_19;\n  }\n  get _KeyValueDiffers_20():any {\n    if ((this.__KeyValueDiffers_20 == null)) { (this.__KeyValueDiffers_20 = import0.ɵm()); }\n    return this.__KeyValueDiffers_20;\n  }\n  get _DomSanitizer_21():import3.ɵe {\n    if ((this.__DomSanitizer_21 == null)) { (this.__DomSanitizer_21 = new import3.ɵe(this.parent.get(import3.DOCUMENT))); }\n    return this.__DomSanitizer_21;\n  }\n  get _Sanitizer_22():any {\n    if ((this.__Sanitizer_22 == null)) { (this.__Sanitizer_22 = this._DomSanitizer_21); }\n    return this.__Sanitizer_22;\n  }\n  get _HAMMER_GESTURE_CONFIG_23():import3.HammerGestureConfig {\n    if ((this.__HAMMER_GESTURE_CONFIG_23 == null)) { (this.__HAMMER_GESTURE_CONFIG_23 = new import3.HammerGestureConfig()); }\n    return this.__HAMMER_GESTURE_CONFIG_23;\n  }\n  get _EVENT_MANAGER_PLUGINS_24():any[] {\n    if ((this.__EVENT_MANAGER_PLUGINS_24 == null)) { (this.__EVENT_MANAGER_PLUGINS_24 = [\n      new import3.ɵDomEventsPlugin(this.parent.get(import3.DOCUMENT)),\n      new import3.ɵKeyEventsPlugin(this.parent.get(import3.DOCUMENT)),\n      new import3.ɵHammerGesturesPlugin(this.parent.get(import3.DOCUMENT),this._HAMMER_GESTURE_CONFIG_23)\n    ]\n    ); }\n    return this.__EVENT_MANAGER_PLUGINS_24;\n  }\n  get _EventManager_25():import3.EventManager {\n    if ((this.__EventManager_25 == null)) { (this.__EventManager_25 = new import3.EventManager(this._EVENT_MANAGER_PLUGINS_24,this.parent.get(import0.NgZone))); }\n    return this.__EventManager_25;\n  }\n  get _ɵDomSharedStylesHost_26():import3.ɵDomSharedStylesHost {\n    if ((this.__ɵDomSharedStylesHost_26 == null)) { (this.__ɵDomSharedStylesHost_26 = new import3.ɵDomSharedStylesHost(this.parent.get(import3.DOCUMENT))); }\n    return this.__ɵDomSharedStylesHost_26;\n  }\n  get _ɵDomRendererFactory2_27():import3.ɵDomRendererFactory2 {\n    if ((this.__ɵDomRendererFactory2_27 == null)) { (this.__ɵDomRendererFactory2_27 = new import3.ɵDomRendererFactory2(this._EventManager_25,this._ɵDomSharedStylesHost_26)); }\n    return this.__ɵDomRendererFactory2_27;\n  }\n  get _RendererFactory2_28():any {\n    if ((this.__RendererFactory2_28 == null)) { (this.__RendererFactory2_28 = this._ɵDomRendererFactory2_27); }\n    return this.__RendererFactory2_28;\n  }\n  get _ɵSharedStylesHost_29():any {\n    if ((this.__ɵSharedStylesHost_29 == null)) { (this.__ɵSharedStylesHost_29 = this._ɵDomSharedStylesHost_26); }\n    return this.__ɵSharedStylesHost_29;\n  }\n  get _Testability_30():import0.Testability {\n    if ((this.__Testability_30 == null)) { (this.__Testability_30 = new import0.Testability(this.parent.get(import0.NgZone))); }\n    return this.__Testability_30;\n  }\n  get _Meta_31():import3.Meta {\n    if ((this.__Meta_31 == null)) { (this.__Meta_31 = new import3.Meta(this.parent.get(import3.DOCUMENT))); }\n    return this.__Meta_31;\n  }\n  get _Title_32():import3.Title {\n    if ((this.__Title_32 == null)) { (this.__Title_32 = new import3.Title(this.parent.get(import3.DOCUMENT))); }\n    return this.__Title_32;\n  }\n  get __injector_33():any {\n    if ((this.___injector_33 == null)) { (this.___injector_33 = import4.ɵa()); }\n    return this.___injector_33;\n  }\n  get __rootScope_34():any {\n    if ((this.___rootScope_34 == null)) { (this.___rootScope_34 = import4.ɵb(this.__injector_33)); }\n    return this.___rootScope_34;\n  }\n  get __compile_35():any {\n    if ((this.___compile_35 == null)) { (this.___compile_35 = import4.ɵc(this.__injector_33)); }\n    return this.___compile_35;\n  }\n  get __parse_36():any {\n    if ((this.___parse_36 == null)) { (this.___parse_36 = import4.ɵd(this.__injector_33)); }\n    return this.___parse_36;\n  }\n  get __uiRouter_37():any {\n    if ((this.___uiRouter_37 == null)) { (this.___uiRouter_37 = import6.getUIRouter(this.__injector_33)); }\n    return this.___uiRouter_37;\n  }\n  get _UIRouter_38():any {\n    if ((this.__UIRouter_38 == null)) { (this.__UIRouter_38 = import6.uiRouterUpgradeFactory(this.__uiRouter_37,this)); }\n    return this.__UIRouter_38;\n  }\n  get _StateRegistry_40():any {\n    if ((this.__StateRegistry_40 == null)) { (this.__StateRegistry_40 = import12.fnStateRegistry(this._UIRouter_38)); }\n    return this.__StateRegistry_40;\n  }\n  get _UIView_PARENT_INJECT_41():any {\n    if ((this.__UIView_PARENT_INJECT_41 == null)) { (this.__UIView_PARENT_INJECT_41 = import6.getParentUIViewInject(this._StateRegistry_40)); }\n    return this.__UIView_PARENT_INJECT_41;\n  }\n  get _StateService_42():any {\n    if ((this.__StateService_42 == null)) { (this.__StateService_42 = import12.fnStateService(this._UIRouter_38)); }\n    return this.__StateService_42;\n  }\n  get _TransitionService_43():any {\n    if ((this.__TransitionService_43 == null)) { (this.__TransitionService_43 = import12.fnTransitionService(this._UIRouter_38)); }\n    return this.__TransitionService_43;\n  }\n  get _UrlMatcherFactory_44():any {\n    if ((this.__UrlMatcherFactory_44 == null)) { (this.__UrlMatcherFactory_44 = import12.fnUrlMatcherFactory(this._UIRouter_38)); }\n    return this.__UrlMatcherFactory_44;\n  }\n  get _UrlRouter_45():any {\n    if ((this.__UrlRouter_45 == null)) { (this.__UrlRouter_45 = import12.fnUrlRouter(this._UIRouter_38)); }\n    return this.__UrlRouter_45;\n  }\n  get _UrlService_46():any {\n    if ((this.__UrlService_46 == null)) { (this.__UrlService_46 = import12.fnUrlService(this._UIRouter_38)); }\n    return this.__UrlService_46;\n  }\n  get _ViewService_47():any {\n    if ((this.__ViewService_47 == null)) { (this.__ViewService_47 = import12.fnViewService(this._UIRouter_38)); }\n    return this.__ViewService_47;\n  }\n  get _UIRouterGlobals_48():any {\n    if ((this.__UIRouterGlobals_48 == null)) { (this.__UIRouterGlobals_48 = import12.fnGlobals(this._UIRouter_38)); }\n    return this.__UIRouterGlobals_48;\n  }\n  get _ɵi_49():import7.ɵi {\n    if ((this.__ɵi_49 == null)) { (this.__ɵi_49 = new import7.ɵi()); }\n    return this.__ɵi_49;\n  }\n  get _NgModuleFactoryLoader_52():import0.SystemJsNgModuleLoader {\n    if ((this.__NgModuleFactoryLoader_52 == null)) { (this.__NgModuleFactoryLoader_52 = new import0.SystemJsNgModuleLoader(this._Compiler_17,this.parent.get(import0.SystemJsNgModuleLoaderConfig,(null as any)))); }\n    return this.__NgModuleFactoryLoader_52;\n  }\n  get _DialogService_53():any {\n    if ((this.__DialogService_53 == null)) { (this.__DialogService_53 = import1.getDialogService(this.__injector_33)); }\n    return this.__DialogService_53;\n  }\n  get _Contacts_54():any {\n    if ((this.__Contacts_54 == null)) { (this.__Contacts_54 = import1.getContactsService(this.__injector_33)); }\n    return this.__Contacts_54;\n  }\n  createInternal():import1.SampleAppModuleAngular {\n    this._CommonModule_0 = new import2.CommonModule();\n    this._ErrorHandler_1 = import3.ɵa();\n    this._APP_INITIALIZER_2 = [\n      import0.ɵo,\n      import3.ɵc(this.parent.get(import3.NgProbeToken,(null as any)),this.parent.get(import0.NgProbeToken,(null as any)))\n    ]\n    ;\n    this._ApplicationInitStatus_3 = new import0.ApplicationInitStatus(this._APP_INITIALIZER_2);\n    this._ɵf_4 = new import0.ɵf(this.parent.get(import0.NgZone),this.parent.get(import0.ɵConsole),this,this._ErrorHandler_1,this.componentFactoryResolver,this._ApplicationInitStatus_3);\n    this._ApplicationRef_5 = this._ɵf_4;\n    this._ApplicationModule_6 = new import0.ApplicationModule(this._ApplicationRef_5);\n    this._BrowserModule_7 = new import3.BrowserModule(this.parent.get(import3.BrowserModule,(null as any)));\n    this._UpgradeModule_8 = new import4.UpgradeModule(this,this.parent.get(import0.NgZone));\n    this._UIRouterModule_9 = new import5.UIRouterModule();\n    this._UIRouterUpgradeModule_10 = new import6.UIRouterUpgradeModule();\n    this._ɵba_11 = new import7.ɵba();\n    this._FormsModule_12 = new import7.FormsModule();\n    this._PrefsModule_13 = new import8.PrefsModule();\n    this._SampleAppModuleAngular_14 = new import1.SampleAppModuleAngular();\n    this._UIROUTER_ROOT_MODULE_39 = [{}];\n    this._UIROUTER_MODULE_TOKEN_50 = [\n          {states: [{\n            parent: 'app',\n            name: 'prefs',\n            url: '/prefs',\n            component: import13.PrefsComponent,\n            data: {requiresAuth: true}\n          }\n      ]},\n          {states: [{\n            name: 'contacts.**',\n            url: '/contacts',\n            loadChildren: './contacts/contacts.module#ContactsModule'\n          }\n      ]}\n    ]\n    ;\n    this._ROUTES_51 = [\n        [{\n          parent: 'app',\n          name: 'prefs',\n          url: '/prefs',\n          component: import13.PrefsComponent,\n          data: {requiresAuth: true}\n        }\n      ],\n        [{\n          name: 'contacts.**',\n          url: '/contacts',\n          loadChildren: './contacts/contacts.module#ContactsModule'\n        }\n      ]\n    ]\n    ;\n    return this._SampleAppModuleAngular_14;\n  }\n  getInternal(token:any,notFoundResult:any):any {\n    if ((token === import2.CommonModule)) { return this._CommonModule_0; }\n    if ((token === import0.ErrorHandler)) { return this._ErrorHandler_1; }\n    if ((token === import0.APP_INITIALIZER)) { return this._APP_INITIALIZER_2; }\n    if ((token === import0.ApplicationInitStatus)) { return this._ApplicationInitStatus_3; }\n    if ((token === import0.ɵf)) { return this._ɵf_4; }\n    if ((token === import0.ApplicationRef)) { return this._ApplicationRef_5; }\n    if ((token === import0.ApplicationModule)) { return this._ApplicationModule_6; }\n    if ((token === import3.BrowserModule)) { return this._BrowserModule_7; }\n    if ((token === import4.UpgradeModule)) { return this._UpgradeModule_8; }\n    if ((token === import5.UIRouterModule)) { return this._UIRouterModule_9; }\n    if ((token === import6.UIRouterUpgradeModule)) { return this._UIRouterUpgradeModule_10; }\n    if ((token === import7.ɵba)) { return this._ɵba_11; }\n    if ((token === import7.FormsModule)) { return this._FormsModule_12; }\n    if ((token === import8.PrefsModule)) { return this._PrefsModule_13; }\n    if ((token === import1.SampleAppModuleAngular)) { return this._SampleAppModuleAngular_14; }\n    if ((token === import0.LOCALE_ID)) { return this._LOCALE_ID_15; }\n    if ((token === import2.NgLocalization)) { return this._NgLocalization_16; }\n    if ((token === import0.Compiler)) { return this._Compiler_17; }\n    if ((token === import0.APP_ID)) { return this._APP_ID_18; }\n    if ((token === import0.IterableDiffers)) { return this._IterableDiffers_19; }\n    if ((token === import0.KeyValueDiffers)) { return this._KeyValueDiffers_20; }\n    if ((token === import3.DomSanitizer)) { return this._DomSanitizer_21; }\n    if ((token === import0.Sanitizer)) { return this._Sanitizer_22; }\n    if ((token === import3.HAMMER_GESTURE_CONFIG)) { return this._HAMMER_GESTURE_CONFIG_23; }\n    if ((token === import3.EVENT_MANAGER_PLUGINS)) { return this._EVENT_MANAGER_PLUGINS_24; }\n    if ((token === import3.EventManager)) { return this._EventManager_25; }\n    if ((token === import3.ɵDomSharedStylesHost)) { return this._ɵDomSharedStylesHost_26; }\n    if ((token === import3.ɵDomRendererFactory2)) { return this._ɵDomRendererFactory2_27; }\n    if ((token === import0.RendererFactory2)) { return this._RendererFactory2_28; }\n    if ((token === import3.ɵSharedStylesHost)) { return this._ɵSharedStylesHost_29; }\n    if ((token === import0.Testability)) { return this._Testability_30; }\n    if ((token === import3.Meta)) { return this._Meta_31; }\n    if ((token === import3.Title)) { return this._Title_32; }\n    if ((token === '$injector')) { return this.__injector_33; }\n    if ((token === '$rootScope')) { return this.__rootScope_34; }\n    if ((token === '$compile')) { return this.__compile_35; }\n    if ((token === '$parse')) { return this.__parse_36; }\n    if ((token === '$uiRouter')) { return this.__uiRouter_37; }\n    if ((token === import14.UIRouter)) { return this._UIRouter_38; }\n    if ((token === import5.UIROUTER_ROOT_MODULE)) { return this._UIROUTER_ROOT_MODULE_39; }\n    if ((token === import15.StateRegistry)) { return this._StateRegistry_40; }\n    if ((token === 'UIView.PARENT_INJECT')) { return this._UIView_PARENT_INJECT_41; }\n    if ((token === import16.StateService)) { return this._StateService_42; }\n    if ((token === import17.TransitionService)) { return this._TransitionService_43; }\n    if ((token === import18.UrlMatcherFactory)) { return this._UrlMatcherFactory_44; }\n    if ((token === import19.UrlRouter)) { return this._UrlRouter_45; }\n    if ((token === import20.UrlService)) { return this._UrlService_46; }\n    if ((token === import21.ViewService)) { return this._ViewService_47; }\n    if ((token === import22.UIRouterGlobals)) { return this._UIRouterGlobals_48; }\n    if ((token === import7.ɵi)) { return this._ɵi_49; }\n    if ((token === import5.UIROUTER_MODULE_TOKEN)) { return this._UIROUTER_MODULE_TOKEN_50; }\n    if ((token === import23.ROUTES)) { return this._ROUTES_51; }\n    if ((token === import0.NgModuleFactoryLoader)) { return this._NgModuleFactoryLoader_52; }\n    if ((token === 'DialogService')) { return this._DialogService_53; }\n    if ((token === 'Contacts')) { return this._Contacts_54; }\n    return notFoundResult;\n  }\n  destroyInternal():void {\n    this._ɵf_4.ngOnDestroy();\n    (this.__ɵDomSharedStylesHost_26 && this._ɵDomSharedStylesHost_26.ngOnDestroy());\n  }\n}\nexport const SampleAppModuleAngularNgFactory:import0.NgModuleFactory<import1.SampleAppModuleAngular> = new import0.NgModuleFactory<any>(SampleAppModuleAngularInjector,import1.SampleAppModuleAngular);\n//# sourceMappingURL=data:application/json;base64,eyJmaWxlIjoiL1VzZXJzL2N0aGllbGVuL3Byb2plY3RzL3Vpcm91dGVyL3NhbXBsZS1hcHAtbmcxLXRvLW5nMi9hcHAvYW5ndWxhck1vZHVsZS5uZ2ZhY3RvcnkudHMiLCJ2ZXJzaW9uIjozLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJuZzovLy9Vc2Vycy9jdGhpZWxlbi9wcm9qZWN0cy91aXJvdXRlci9zYW1wbGUtYXBwLW5nMS10by1uZzIvYXBwL2FuZ3VsYXJNb2R1bGUudHMiXSwic291cmNlc0NvbnRlbnQiOlsiICJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsifQ==\n\n\n\n// WEBPACK FOOTER //\n// ./$$_gendir/app/angularModule.ngfactory.ts","import { sampleAppModuleAngularJS } from \"../angularJSModule\";\n\n/** Google analytics */\n\n(<any>(function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\n      (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*(<any>new Date());a=s.createElement(o),\n    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\n}))(window,document,'script','//www.google-analytics.com/analytics.js','ga');\n\nvar ga = window['ga'];\n\nga('create', 'UA-73329341-1', 'auto');\nga('send', 'pageview');\n\n\nsampleAppModuleAngularJS.config($transitionsProvider => {\n  $transitionsProvider.onBefore({}, $transition$ => {\n    let path = $transition$.treeChanges().to\n        .map(node=>node.state.self.url)\n        .filter(x => x != null && x !== '^')\n        .join('');\n\n    let vpv = (path) => ga('send', 'pageview', path);\n\n    let success = () => { vpv(path); };\n    let error = (err) => {\n      let errType = err && err.hasOwnProperty(\"type\") ? err.type : '_';\n      path = path.replace(/^\\//, \"\");\n      vpv(`/errors/${errType}/${path}`)\n    };\n\n    $transition$.promise.then(success, error);\n  })\n});\n\n\n\n// WEBPACK FOOTER //\n// ./app/util/ga.ts","/**\n * @fileoverview This file is generated by the Angular template compiler.\n * Do not edit.\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}\n */\n /* tslint:disable */\n\n\nimport * as import0 from '@angular/core';\nimport * as import1 from '../../../app/prefs/prefs.component';\nimport * as import2 from '@angular/forms';\nconst styles_PrefsComponent:any[] = ([] as any[]);\nexport const RenderType_PrefsComponent:import0.RendererType2 = import0.ɵcrt({\n  encapsulation: 2,\n  styles: styles_PrefsComponent,\n  data: {}\n}\n);\nexport function View_PrefsComponent_0(l:any):import0.ɵViewDefinition {\n  return import0.ɵvid(0,[\n    (l()(),import0.ɵted((null as any),['\\n      '])),\n    (l()(),import0.ɵeld(0,(null as any),(null as any),7,'div',([] as any[]),(null as any),(null as any),(null as any),(null as any),(null as any))),\n    (l()(),import0.ɵted((null as any),['\\n          '])),\n      (l()(),import0.ɵeld(0,(null as any),(null as any),4,'button',[[\n        'class',\n        'btn btn-primary'\n      ]\n      ],(null as any),[[\n        (null as any),\n        'click'\n      ]\n    ],(v,en,$event) => {\n      var ad:boolean = true;\n      var co:import1.PrefsComponent = v.component;\n      if (('click' === en)) {\n        const pd_0:any = ((<any>co.reset()) !== false);\n        ad = (pd_0 && ad);\n      }\n      return ad;\n    },(null as any),(null as any))),\n      (l()(),import0.ɵeld(0,(null as any),(null as any),0,'i',[[\n        'class',\n        'fa fa-recycle'\n      ]\n    ],(null as any),(null as any),(null as any),(null as any),(null as any))),\n    (l()(),import0.ɵted((null as any),[' '])),\n    (l()(),import0.ɵeld(0,(null as any),(null as any),1,'span',([] as any[]),(null as any),(null as any),(null as any),(null as any),(null as any))),\n    (l()(),import0.ɵted((null as any),['Reset All Data'])),\n    (l()(),import0.ɵted((null as any),['\\n      '])),\n    (l()(),import0.ɵted((null as any),['\\n\\n      '])),\n    (l()(),import0.ɵeld(0,(null as any),(null as any),14,'div',([] as any[]),(null as any),(null as any),(null as any),(null as any),(null as any))),\n    (l()(),import0.ɵted((null as any),['\\n          '])),\n      (l()(),import0.ɵeld(0,(null as any),(null as any),1,'label',[[\n        'for',\n        'restDelay'\n      ]\n    ],(null as any),(null as any),(null as any),(null as any),(null as any))),\n    (l()(),import0.ɵted((null as any),['Simulated REST API delay (ms)'])),\n    (l()(),import0.ɵted((null as any),['\\n          '])),\n    (l()(),import0.ɵeld(0,(null as any),(null as any),5,'input',[\n      [\n        'name',\n        'restDelay'\n      ]\n      ,\n      [\n        'type',\n        'text'\n      ]\n\n    ]\n    ,[\n      [\n        2,\n        'ng-untouched',\n        (null as any)\n      ]\n      ,\n      [\n        2,\n        'ng-touched',\n        (null as any)\n      ]\n      ,\n      [\n        2,\n        'ng-pristine',\n        (null as any)\n      ]\n      ,\n      [\n        2,\n        'ng-dirty',\n        (null as any)\n      ]\n      ,\n      [\n        2,\n        'ng-valid',\n        (null as any)\n      ]\n      ,\n      [\n        2,\n        'ng-invalid',\n        (null as any)\n      ]\n      ,\n      [\n        2,\n        'ng-pending',\n        (null as any)\n      ]\n\n    ]\n    ,[\n      [\n        (null as any),\n        'ngModelChange'\n      ]\n      ,\n      [\n        (null as any),\n        'input'\n      ]\n      ,\n      [\n        (null as any),\n        'blur'\n      ]\n      ,\n      [\n        (null as any),\n        'compositionstart'\n      ]\n      ,\n      [\n        (null as any),\n        'compositionend'\n      ]\n\n    ]\n    ,(v,en,$event) => {\n      var ad:boolean = true;\n      var co:import1.PrefsComponent = v.component;\n      if (('input' === en)) {\n        const pd_0:any = ((<any>import0.ɵnov(v,16)._handleInput($event.target.value)) !== false);\n        ad = (pd_0 && ad);\n      }\n      if (('blur' === en)) {\n        const pd_1:any = ((<any>import0.ɵnov(v,16).onTouched()) !== false);\n        ad = (pd_1 && ad);\n      }\n      if (('compositionstart' === en)) {\n        const pd_2:any = ((<any>import0.ɵnov(v,16)._compositionStart()) !== false);\n        ad = (pd_2 && ad);\n      }\n      if (('compositionend' === en)) {\n        const pd_3:any = ((<any>import0.ɵnov(v,16)._compositionEnd($event.target.value)) !== false);\n        ad = (pd_3 && ad);\n      }\n      if (('ngModelChange' === en)) {\n        const pd_4:any = ((<any>(co.prefs.restDelay = $event)) !== false);\n        ad = (pd_4 && ad);\n      }\n      return ad;\n    },(null as any),(null as any))),\n    import0.ɵdid(16384,(null as any),0,import2.DefaultValueAccessor,[\n      import0.Renderer,\n      import0.ElementRef,\n      [\n        2,\n        import2.COMPOSITION_BUFFER_MODE\n      ]\n\n    ]\n    ,(null as any),(null as any)),\n    import0.ɵprd(1024,(null as any),import2.NG_VALUE_ACCESSOR,(p0_0:any) => {\n      return [p0_0];\n    },[import2.DefaultValueAccessor]),\n    import0.ɵdid(671744,(null as any),0,import2.NgModel,[\n      [\n        8,\n        (null as any)\n      ]\n      ,\n      [\n        8,\n        (null as any)\n      ]\n      ,\n      [\n        8,\n        (null as any)\n      ]\n      ,\n      [\n        2,\n        import2.NG_VALUE_ACCESSOR\n      ]\n\n    ]\n    ,{\n      name: [\n        0,\n        'name'\n      ]\n      ,\n      model: [\n        1,\n        'model'\n      ]\n\n    }\n    ,{update: 'ngModelChange'}),\n    import0.ɵprd(2048,(null as any),import2.NgControl,(null as any),[import2.NgModel]),\n    import0.ɵdid(16384,(null as any),0,import2.NgControlStatus,[import2.NgControl],(null as any),(null as any)),\n    (l()(),import0.ɵted((null as any),['\\n          '])),\n      (l()(),import0.ɵeld(0,(null as any),(null as any),1,'button',[[\n        'class',\n        'btn btn-primary'\n      ]\n      ],(null as any),[[\n        (null as any),\n        'click'\n      ]\n    ],(v,en,$event) => {\n      var ad:boolean = true;\n      var co:import1.PrefsComponent = v.component;\n      if (('click' === en)) {\n        const pd_0:any = ((<any>co.savePrefs()) !== false);\n        ad = (pd_0 && ad);\n      }\n      return ad;\n    },(null as any),(null as any))),\n    (l()(),import0.ɵted((null as any),['Save'])),\n    (l()(),import0.ɵted((null as any),['\\n      '])),\n    (l()(),import0.ɵted((null as any),['\\n  ']))\n  ]\n  ,(ck,v) => {\n    var co:import1.PrefsComponent = v.component;\n    const currVal_7:any = 'restDelay';\n    const currVal_8:any = co.prefs.restDelay;\n    ck(v,18,0,currVal_7,currVal_8);\n  },(ck,v) => {\n    const currVal_0:any = import0.ɵnov(v,20).ngClassUntouched;\n    const currVal_1:any = import0.ɵnov(v,20).ngClassTouched;\n    const currVal_2:any = import0.ɵnov(v,20).ngClassPristine;\n    const currVal_3:any = import0.ɵnov(v,20).ngClassDirty;\n    const currVal_4:any = import0.ɵnov(v,20).ngClassValid;\n    const currVal_5:any = import0.ɵnov(v,20).ngClassInvalid;\n    const currVal_6:any = import0.ɵnov(v,20).ngClassPending;\n    ck(v,15,0,currVal_0,currVal_1,currVal_2,currVal_3,currVal_4,currVal_5,currVal_6);\n  });\n}\nfunction View_PrefsComponent_Host_0(l:any):import0.ɵViewDefinition {\n  return import0.ɵvid(0,[\n    (l()(),import0.ɵeld(0,(null as any),(null as any),1,'prefs-component',([] as any[]),(null as any),(null as any),(null as any),View_PrefsComponent_0,RenderType_PrefsComponent)),\n    import0.ɵdid(114688,(null as any),0,import1.PrefsComponent,['AppConfig'],(null as any),(null as any))\n  ]\n  ,(ck,v) => {\n    ck(v,1,0);\n  },(null as any));\n}\nexport const PrefsComponentNgFactory:import0.ComponentFactory<import1.PrefsComponent> = import0.ɵccf('prefs-component',import1.PrefsComponent,View_PrefsComponent_Host_0,{},{},([] as any[]));\n//# sourceMappingURL=data:application/json;base64,eyJmaWxlIjoiL1VzZXJzL2N0aGllbGVuL3Byb2plY3RzL3Vpcm91dGVyL3NhbXBsZS1hcHAtbmcxLXRvLW5nMi9hcHAvcHJlZnMvcHJlZnMuY29tcG9uZW50Lm5nZmFjdG9yeS50cyIsInZlcnNpb24iOjMsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIm5nOi8vL1VzZXJzL2N0aGllbGVuL3Byb2plY3RzL3Vpcm91dGVyL3NhbXBsZS1hcHAtbmcxLXRvLW5nMi9hcHAvcHJlZnMvcHJlZnMuY29tcG9uZW50LnRzIiwibmc6Ly8vVXNlcnMvY3RoaWVsZW4vcHJvamVjdHMvdWlyb3V0ZXIvc2FtcGxlLWFwcC1uZzEtdG8tbmcyL2FwcC9wcmVmcy9wcmVmcy5jb21wb25lbnQudHMuUHJlZnNDb21wb25lbnQuaHRtbCIsIm5nOi8vL1VzZXJzL2N0aGllbGVuL3Byb2plY3RzL3Vpcm91dGVyL3NhbXBsZS1hcHAtbmcxLXRvLW5nMi9hcHAvcHJlZnMvcHJlZnMuY29tcG9uZW50LnRzLlByZWZzQ29tcG9uZW50X0hvc3QuaHRtbCJdLCJzb3VyY2VzQ29udGVudCI6WyIgIiwiXG4gICAgICA8ZGl2PlxuICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJidG4gYnRuLXByaW1hcnlcIiAoY2xpY2spPVwicmVzZXQoKVwiPjxpIGNsYXNzPVwiZmEgZmEtcmVjeWNsZVwiPjwvaT4gPHNwYW4+UmVzZXQgQWxsIERhdGE8L3NwYW4+PC9idXR0b24+XG4gICAgICA8L2Rpdj5cblxuICAgICAgPGRpdj5cbiAgICAgICAgICA8bGFiZWwgZm9yPVwicmVzdERlbGF5XCI+U2ltdWxhdGVkIFJFU1QgQVBJIGRlbGF5IChtcyk8L2xhYmVsPlxuICAgICAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIG5hbWU9XCJyZXN0RGVsYXlcIiBbKG5nTW9kZWwpXT1cInByZWZzLnJlc3REZWxheVwiPlxuICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJidG4gYnRuLXByaW1hcnlcIiAoY2xpY2spPVwic2F2ZVByZWZzKClcIj5TYXZlPC9idXR0b24+XG4gICAgICA8L2Rpdj5cbiAgIiwiPHByZWZzLWNvbXBvbmVudD48L3ByZWZzLWNvbXBvbmVudD4iXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7OztJQ0FBO0lBQ007SUFBSztNQUNEO1FBQUE7UUFBQTtNQUFBO01BQUE7UUFBQTtRQUFBO01BQUE7SUFBQTtNQUFBO01BQUE7TUFBZ0M7UUFBQTtRQUFBO01BQUE7TUFBaEM7SUFBQTtNQUFrRDtRQUFBO1FBQUE7TUFBQTtJQUFBO0lBQTZCO0lBQUM7SUFBTTtJQUE4QjtJQUNsSDtJQUVOO0lBQUs7TUFDRDtRQUFBO1FBQUE7TUFBQTtJQUFBO0lBQXVCO0lBQXFDO0lBQzVEO01BQUE7UUFBQTtRQUFBO01BQUE7O01BQUE7UUFBQTtRQUFBO01BQUE7O0lBQUE7S0FBQTtNQUFBO1FBQUE7UUFBQTtRQUFBO01BQUE7O01BQUE7UUFBQTtRQUFBO1FBQUE7TUFBQTs7TUFBQTtRQUFBO1FBQUE7UUFBQTtNQUFBOztNQUFBO1FBQUE7UUFBQTtRQUFBO01BQUE7O01BQUE7UUFBQTtRQUFBO1FBQUE7TUFBQTs7TUFBQTtRQUFBO1FBQUE7UUFBQTtNQUFBOztNQUFBO1FBQUE7UUFBQTtRQUFBO01BQUE7O0lBQUE7S0FBQTtNQUFBO1FBQUE7UUFBQTtNQUFBOztNQUFBO1FBQUE7UUFBQTtNQUFBOztNQUFBO1FBQUE7UUFBQTtNQUFBOztNQUFBO1FBQUE7UUFBQTtNQUFBOztNQUFBO1FBQUE7UUFBQTtNQUFBOztJQUFBO0tBQUE7TUFBQTtNQUFBO01BQUE7UUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBO1FBQUE7TUFBQTtNQUFBO1FBQUE7UUFBQTtNQUFBO01BQUE7UUFBQTtRQUFBO01BQUE7TUFBb0M7UUFBQTtRQUFBO01BQUE7TUFBcEM7SUFBQTtnQkFBQTs7O01BQUE7UUFBQTs7TUFBQTs7SUFBQTtLQUFBO2dCQUFBO01BQUE7SUFBQTtnQkFBQTtNQUFBO1FBQUE7UUFBQTtNQUFBOztNQUFBO1FBQUE7UUFBQTtNQUFBOztNQUFBO1FBQUE7UUFBQTtNQUFBOztNQUFBO1FBQUE7O01BQUE7O0lBQUE7S0FBQTtNQUFBO1FBQUE7UUFBQTtNQUFBOztNQUFBO1FBQUE7UUFBQTtNQUFBOztJQUFBO0tBQUE7Z0JBQUE7Z0JBQUE7SUFBa0U7TUFDbEU7UUFBQTtRQUFBO01BQUE7TUFBQTtRQUFBO1FBQUE7TUFBQTtJQUFBO01BQUE7TUFBQTtNQUFnQztRQUFBO1FBQUE7TUFBQTtNQUFoQztJQUFBO0lBQXNEO0lBQWE7SUFDakU7Ozs7SUFGaUI7SUFBaUI7SUFBcEMsVUFBbUIsVUFBaUIsU0FBcEM7O0lBQUE7SUFBQTtJQUFBO0lBQUE7SUFBQTtJQUFBO0lBQUE7SUFBQSxVQUFBLHFFQUFBOzs7OztJQ1BWO2dCQUFBOzs7SUFBQTs7OyJ9\n\n\n\n// WEBPACK FOOTER //\n// ./$$_gendir/app/prefs/prefs.component.ngfactory.ts","/**\n * @fileoverview This file is generated by the Angular template compiler.\n * Do not edit.\n * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride}\n */\n /* tslint:disable */\n\n\nimport * as import0 from '@angular/core';\nimport * as import1 from '@uirouter/angular-hybrid/lib/angular-hybrid';\nimport * as import2 from '@angular/common';\nimport * as import3 from '@uirouter/angular/lib/uiRouterNgModule';\nimport * as import4 from '@angular/upgrade/static';\nimport * as import5 from '../../angular/lib/directives/uiView.ngfactory';\nimport * as import6 from '@uirouter/angular/lib/providers';\nimport * as import7 from '@uirouter/core/lib/router';\nimport * as import8 from '@uirouter/core/lib/state/stateRegistry';\nimport * as import9 from '@uirouter/core/lib/state/stateService';\nimport * as import10 from '@uirouter/core/lib/transition/transitionService';\nimport * as import11 from '@uirouter/core/lib/url/urlMatcherFactory';\nimport * as import12 from '@uirouter/core/lib/url/urlRouter';\nimport * as import13 from '@uirouter/core/lib/url/urlService';\nimport * as import14 from '@uirouter/core/lib/view/view';\nimport * as import15 from '@uirouter/core/lib/globals';\nimport * as import16 from '@uirouter/angular/lib/directives/uiView';\nclass UIRouterUpgradeModuleInjector extends import0.ɵNgModuleInjector<import1.UIRouterUpgradeModule> {\n  _CommonModule_0:import2.CommonModule;\n  _UIRouterModule_1:import3.UIRouterModule;\n  _UpgradeModule_2:import4.UpgradeModule;\n  _UIRouterUpgradeModule_3:import1.UIRouterUpgradeModule;\n  __NgLocalization_4:import2.NgLocaleLocalization;\n  ___injector_5:any;\n  ___rootScope_6:any;\n  ___compile_7:any;\n  ___parse_8:any;\n  ___uiRouter_9:any;\n  __UIRouter_10:any;\n  _UIROUTER_ROOT_MODULE_11:any[];\n  __StateRegistry_12:any;\n  __UIView_PARENT_INJECT_13:any;\n  __StateService_14:any;\n  __TransitionService_15:any;\n  __UrlMatcherFactory_16:any;\n  __UrlRouter_17:any;\n  __UrlService_18:any;\n  __ViewService_19:any;\n  __UIRouterGlobals_20:any;\n  constructor(parent:import0.Injector) {\n    super(parent,[\n      import5.UIViewNgFactory,\n      UIViewNgUpgradeNgFactory\n    ]\n    ,([] as any[]));\n  }\n  get _NgLocalization_4():import2.NgLocaleLocalization {\n    if ((this.__NgLocalization_4 == null)) { (this.__NgLocalization_4 = new import2.NgLocaleLocalization(this.parent.get(import0.LOCALE_ID))); }\n    return this.__NgLocalization_4;\n  }\n  get __injector_5():any {\n    if ((this.___injector_5 == null)) { (this.___injector_5 = import4.ɵa()); }\n    return this.___injector_5;\n  }\n  get __rootScope_6():any {\n    if ((this.___rootScope_6 == null)) { (this.___rootScope_6 = import4.ɵb(this.__injector_5)); }\n    return this.___rootScope_6;\n  }\n  get __compile_7():any {\n    if ((this.___compile_7 == null)) { (this.___compile_7 = import4.ɵc(this.__injector_5)); }\n    return this.___compile_7;\n  }\n  get __parse_8():any {\n    if ((this.___parse_8 == null)) { (this.___parse_8 = import4.ɵd(this.__injector_5)); }\n    return this.___parse_8;\n  }\n  get __uiRouter_9():any {\n    if ((this.___uiRouter_9 == null)) { (this.___uiRouter_9 = import1.getUIRouter(this.__injector_5)); }\n    return this.___uiRouter_9;\n  }\n  get _UIRouter_10():any {\n    if ((this.__UIRouter_10 == null)) { (this.__UIRouter_10 = import1.uiRouterUpgradeFactory(this.__uiRouter_9,this)); }\n    return this.__UIRouter_10;\n  }\n  get _StateRegistry_12():any {\n    if ((this.__StateRegistry_12 == null)) { (this.__StateRegistry_12 = import6.fnStateRegistry(this._UIRouter_10)); }\n    return this.__StateRegistry_12;\n  }\n  get _UIView_PARENT_INJECT_13():any {\n    if ((this.__UIView_PARENT_INJECT_13 == null)) { (this.__UIView_PARENT_INJECT_13 = import1.getParentUIViewInject(this._StateRegistry_12)); }\n    return this.__UIView_PARENT_INJECT_13;\n  }\n  get _StateService_14():any {\n    if ((this.__StateService_14 == null)) { (this.__StateService_14 = import6.fnStateService(this._UIRouter_10)); }\n    return this.__StateService_14;\n  }\n  get _TransitionService_15():any {\n    if ((this.__TransitionService_15 == null)) { (this.__TransitionService_15 = import6.fnTransitionService(this._UIRouter_10)); }\n    return this.__TransitionService_15;\n  }\n  get _UrlMatcherFactory_16():any {\n    if ((this.__UrlMatcherFactory_16 == null)) { (this.__UrlMatcherFactory_16 = import6.fnUrlMatcherFactory(this._UIRouter_10)); }\n    return this.__UrlMatcherFactory_16;\n  }\n  get _UrlRouter_17():any {\n    if ((this.__UrlRouter_17 == null)) { (this.__UrlRouter_17 = import6.fnUrlRouter(this._UIRouter_10)); }\n    return this.__UrlRouter_17;\n  }\n  get _UrlService_18():any {\n    if ((this.__UrlService_18 == null)) { (this.__UrlService_18 = import6.fnUrlService(this._UIRouter_10)); }\n    return this.__UrlService_18;\n  }\n  get _ViewService_19():any {\n    if ((this.__ViewService_19 == null)) { (this.__ViewService_19 = import6.fnViewService(this._UIRouter_10)); }\n    return this.__ViewService_19;\n  }\n  get _UIRouterGlobals_20():any {\n    if ((this.__UIRouterGlobals_20 == null)) { (this.__UIRouterGlobals_20 = import6.fnGlobals(this._UIRouter_10)); }\n    return this.__UIRouterGlobals_20;\n  }\n  createInternal():import1.UIRouterUpgradeModule {\n    this._CommonModule_0 = new import2.CommonModule();\n    this._UIRouterModule_1 = new import3.UIRouterModule();\n    this._UpgradeModule_2 = new import4.UpgradeModule(this,this.parent.get(import0.NgZone));\n    this._UIRouterUpgradeModule_3 = new import1.UIRouterUpgradeModule();\n    this._UIROUTER_ROOT_MODULE_11 = [{}];\n    return this._UIRouterUpgradeModule_3;\n  }\n  getInternal(token:any,notFoundResult:any):any {\n    if ((token === import2.CommonModule)) { return this._CommonModule_0; }\n    if ((token === import3.UIRouterModule)) { return this._UIRouterModule_1; }\n    if ((token === import4.UpgradeModule)) { return this._UpgradeModule_2; }\n    if ((token === import1.UIRouterUpgradeModule)) { return this._UIRouterUpgradeModule_3; }\n    if ((token === import2.NgLocalization)) { return this._NgLocalization_4; }\n    if ((token === '$injector')) { return this.__injector_5; }\n    if ((token === '$rootScope')) { return this.__rootScope_6; }\n    if ((token === '$compile')) { return this.__compile_7; }\n    if ((token === '$parse')) { return this.__parse_8; }\n    if ((token === '$uiRouter')) { return this.__uiRouter_9; }\n    if ((token === import7.UIRouter)) { return this._UIRouter_10; }\n    if ((token === import3.UIROUTER_ROOT_MODULE)) { return this._UIROUTER_ROOT_MODULE_11; }\n    if ((token === import8.StateRegistry)) { return this._StateRegistry_12; }\n    if ((token === 'UIView.PARENT_INJECT')) { return this._UIView_PARENT_INJECT_13; }\n    if ((token === import9.StateService)) { return this._StateService_14; }\n    if ((token === import10.TransitionService)) { return this._TransitionService_15; }\n    if ((token === import11.UrlMatcherFactory)) { return this._UrlMatcherFactory_16; }\n    if ((token === import12.UrlRouter)) { return this._UrlRouter_17; }\n    if ((token === import13.UrlService)) { return this._UrlService_18; }\n    if ((token === import14.ViewService)) { return this._ViewService_19; }\n    if ((token === import15.UIRouterGlobals)) { return this._UIRouterGlobals_20; }\n    return notFoundResult;\n  }\n  destroyInternal():void {\n  }\n}\nexport const UIRouterUpgradeModuleNgFactory:import0.NgModuleFactory<import1.UIRouterUpgradeModule> = new import0.NgModuleFactory<any>(UIRouterUpgradeModuleInjector,import1.UIRouterUpgradeModule);\nconst styles_UIViewNgUpgrade:any[] = ([] as any[]);\nexport const RenderType_UIViewNgUpgrade:import0.RendererType2 = import0.ɵcrt({\n  encapsulation: 2,\n  styles: styles_UIViewNgUpgrade,\n  data: {}\n}\n);\nexport function View_UIViewNgUpgrade_0(l:any):import0.ɵViewDefinition {\n  return import0.ɵvid(0,[\n    (l()(),import0.ɵeld(16777216,(null as any),(null as any),1,'ui-view',([] as any[]),(null as any),(null as any),(null as any),import5.View_UIView_0,import5.RenderType_UIView)),\n    import0.ɵdid(245760,(null as any),0,import16.UIView,[\n      import7.UIRouter,\n      'UIView.PARENT_INJECT',\n      import0.ViewContainerRef\n    ]\n      ,{name: [\n        0,\n        'name'\n      ]\n    },(null as any))\n  ]\n  ,(ck,v) => {\n    var co:import1.UIViewNgUpgrade = v.component;\n    const currVal_0:any = co.name;\n    ck(v,1,0,currVal_0);\n  },(null as any));\n}\nfunction View_UIViewNgUpgrade_Host_0(l:any):import0.ɵViewDefinition {\n  return import0.ɵvid(0,[\n    (l()(),import0.ɵeld(0,(null as any),(null as any),2,'ui-view-ng-upgrade',([] as any[]),(null as any),(null as any),(null as any),View_UIViewNgUpgrade_0,RenderType_UIViewNgUpgrade)),\n    import0.ɵprd(8448,(null as any),'UIView.PARENT_INJECT',{},([] as any[])),\n    import0.ɵdid(49152,(null as any),0,import1.UIViewNgUpgrade,[\n      import0.ElementRef,\n      'UIView.PARENT_INJECT',\n      import8.StateRegistry\n    ]\n    ,(null as any),(null as any))\n  ]\n  ,(null as any),(null as any));\n}\nexport const UIViewNgUpgradeNgFactory:import0.ComponentFactory<import1.UIViewNgUpgrade> = import0.ɵccf('ui-view-ng-upgrade',import1.UIViewNgUpgrade,View_UIViewNgUpgrade_Host_0,{name: 'name'},{},([] as any[]));\n//# sourceMappingURL=data:application/json;base64,eyJmaWxlIjoiL1VzZXJzL2N0aGllbGVuL3Byb2plY3RzL3Vpcm91dGVyL3NhbXBsZS1hcHAtbmcxLXRvLW5nMi9ub2RlX21vZHVsZXMvQHVpcm91dGVyL2FuZ3VsYXItaHlicmlkL2xpYi9hbmd1bGFyLWh5YnJpZC5uZ2ZhY3RvcnkudHMiLCJ2ZXJzaW9uIjozLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJuZzovLy9Vc2Vycy9jdGhpZWxlbi9wcm9qZWN0cy91aXJvdXRlci9zYW1wbGUtYXBwLW5nMS10by1uZzIvbm9kZV9tb2R1bGVzL0B1aXJvdXRlci9hbmd1bGFyLWh5YnJpZC9saWIvYW5ndWxhci1oeWJyaWQuZC50cyIsIm5nOi8vL1VzZXJzL2N0aGllbGVuL3Byb2plY3RzL3Vpcm91dGVyL3NhbXBsZS1hcHAtbmcxLXRvLW5nMi9ub2RlX21vZHVsZXMvQHVpcm91dGVyL2FuZ3VsYXItaHlicmlkL2xpYi9hbmd1bGFyLWh5YnJpZC5kLnRzLlVJVmlld05nVXBncmFkZS5odG1sIiwibmc6Ly8vVXNlcnMvY3RoaWVsZW4vcHJvamVjdHMvdWlyb3V0ZXIvc2FtcGxlLWFwcC1uZzEtdG8tbmcyL25vZGVfbW9kdWxlcy9AdWlyb3V0ZXIvYW5ndWxhci1oeWJyaWQvbGliL2FuZ3VsYXItaHlicmlkLmQudHMuVUlWaWV3TmdVcGdyYWRlX0hvc3QuaHRtbCJdLCJzb3VyY2VzQ29udGVudCI6WyIgIiwiPHVpLXZpZXcgW25hbWVdPVwibmFtZVwiPjwvdWktdmlldz4iLCI8dWktdmlldy1uZy11cGdyYWRlPjwvdWktdmlldy1uZy11cGdyYWRlPiJdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUNBQTtnQkFBQTs7TUFBQTs7SUFBQTtPQUFBO1FBQUE7UUFBQTtNQUFBO0lBQUE7Ozs7SUFBUztJQUFULFNBQVMsU0FBVDs7Ozs7SUNBQTtnQkFBQTtnQkFBQTs7TUFBQTs7SUFBQTtLQUFBOzs7OyJ9\n\n\n\n// WEBPACK FOOTER //\n// ./$$_gendir/~/@uirouter/angular-hybrid/lib/angular-hybrid.ngfactory.ts","import { NgModule, NgModuleFactoryLoader, SystemJsNgModuleLoader } from '@angular/core';\nimport { UpgradeModule } from '@angular/upgrade/static';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { UIRouterModule } from '@uirouter/angular';\nimport { UIRouterUpgradeModule } from '@uirouter/angular-hybrid';\n\nimport { PrefsModule } from './prefs/prefs.module';\n\n// Create a \"future state\" (a placeholder) for the Contacts\n// Angular module which will be lazy loaded by UI-Router\nexport const contactsFutureState = {\n  name: 'contacts.**',\n  url: '/contacts',\n  loadChildren: './contacts/contacts.module#ContactsModule',\n};\n\nexport function getDialogService($injector) {\n  return $injector.get('DialogService');\n}\n\nexport function getContactsService($injector) {\n  return $injector.get('Contacts');\n}\n\n// The main NgModule for the Angular portion of the hybrid app\n@NgModule({\n  imports: [\n    BrowserModule,\n    // Provide angular upgrade capabilities\n    UpgradeModule,\n    // Provides the @uirouter/angular-hybrid directives\n    UIRouterUpgradeModule,\n    // Provides the @uirouter/angular directives\n    UIRouterModule,\n    // The preferences feature module\n    PrefsModule,\n    // This forChild module registers the contacts future state and enables the lazy loaded contacts module\n    UIRouterModule.forChild({ states: [contactsFutureState] }),\n  ],\n  providers: [\n    // Provide the SystemJsNgModuleLoader when using Angular lazy loading\n    { provide: NgModuleFactoryLoader, useClass: SystemJsNgModuleLoader },\n\n    // Register some AngularJS services as Angular providers\n    { provide: 'DialogService', deps: ['$injector'], useFactory: getDialogService },\n    { provide: 'Contacts', deps: ['$injector'], useFactory: getContactsService },\n  ]\n})\nexport class SampleAppModuleAngular {\n  ngDoBootstrap() {\n    /* no body: this disables normal (non-hybrid) Angular bootstrapping */\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/angularModule.ts","import * as angular from \"angular\";\nimport { globalModule } from './global.module';\n\n/**\n * This service stores and retrieves user preferences in session storage\n */\nexport class AppConfig {\n  sort: string = '+date';\n  emailAddress: string = undefined;\n  restDelay: number = 100;\n\n  constructor() {\n    this.load();\n  }\n\n  load() {\n    try {\n      return angular.extend(this, angular.fromJson(sessionStorage.getItem(\"appConfig\")))\n    } catch (Error) { }\n\n    return this;\n  }\n\n  save() {\n    sessionStorage.setItem(\"appConfig\", angular.toJson(angular.extend({}, this)));\n  }\n}\n\nglobalModule.service('AppConfig', AppConfig);\n\n\n\n// WEBPACK FOOTER //\n// ./app/global/appConfig.service.ts","import {AppConfig} from \"./appConfig.service\";\nimport { globalModule } from './global.module';\n\n/**\n * This service emulates an Authentication Service.\n */\nexport class AuthService {\n  // data\n  usernames: string[] = ['myself@angular.dev', 'devgal@angular.dev', 'devguy@angular.dev'];\n\n  constructor(public AppConfig: AppConfig, public $q, public $timeout) { }\n\n  /**\n   * Returns true if the user is currently authenticated, else false\n   */\n  isAuthenticated() {\n    return !!this.AppConfig.emailAddress;\n  }\n\n  /**\n   * Fake authentication function that returns a promise that is either resolved or rejected.\n   *\n   * Given a username and password, checks that the username matches one of the known\n   * usernames (this.usernames), and that the password matches 'password'.\n   *\n   * Delays 800ms to simulate an async REST API delay.\n   */\n  authenticate(username, password) {\n    let { $timeout, $q, AppConfig } = this;\n\n    // checks if the username is one of the known usernames, and the password is 'password'\n    const checkCredentials = () => $q((resolve, reject) => {\n      var validUsername = this.usernames.indexOf(username) !== -1;\n      var validPassword = password === 'password';\n\n      return (validUsername && validPassword) ? resolve(username) : reject(\"Invalid username or password\");\n    });\n\n    return $timeout(checkCredentials, 800)\n        .then((authenticatedUser) => {\n          AppConfig.emailAddress = authenticatedUser;\n          AppConfig.save()\n        });\n  }\n\n  /** Logs the current user out */\n  logout() {\n    this.AppConfig.emailAddress = undefined;\n    this.AppConfig.save();\n  }\n}\n\nglobalModule.service('AuthService', AuthService);\n\n\n\n// WEBPACK FOOTER //\n// ./app/global/auth.service.ts","import {SessionStorage} from \"../util/sessionStorage\"\nimport {AppConfig} from \"./appConfig.service\";\nimport { globalModule } from './global.module';\n\n/**\n * Fake REST Services (Contacts, Folders, Messages) used in the mymessages submodule.\n *\n * Each of these APIs have:\n *\n * .all()\n * .search(exampleItem)\n * .get(id)\n * .save(item)\n * .post(item)\n * .put(item)\n * .remove(item)\n *\n * See ../util/sessionStorage.js for more details, if curious\n */\n\n/** A fake Contacts REST client API */\nexport class Contacts extends SessionStorage {\n  constructor($http, $timeout, $q, AppConfig: AppConfig) {\n    // http://beta.json-generator.com/api/json/get/V1g6UwwGx\n    super($http, $timeout, $q, \"contacts\", \"data/contacts.json\", AppConfig);\n  }\n}\n\n/** A fake Folders REST client API */\nexport class Folders extends SessionStorage {\n  constructor($http, $timeout, $q, AppConfig) {\n    super($http, $timeout, $q, 'folders', 'data/folders.json', AppConfig);\n  }\n}\n\nexport class Messages extends SessionStorage {\n  constructor($http, $timeout, $q, public AppConfig: AppConfig) {\n    // http://beta.json-generator.com/api/json/get/VJl5GbIze\n    super($http, $timeout, $q, 'messages', 'data/messages.json', AppConfig);\n  }\n\n  byFolder(folder) {\n    let searchObject = { folder: folder._id };\n    let toFromAttr = [\"drafts\", \"sent\"].indexOf(folder._id) !== -1 ? \"from\" : \"to\";\n    searchObject[toFromAttr] = this.AppConfig.emailAddress;\n    return this.search(searchObject);\n  }\n}\n\nglobalModule.service('Contacts', Contacts);\nglobalModule.service('Folders', Folders);\nglobalModule.service('Messages', Messages);\n\n\n\n// WEBPACK FOOTER //\n// ./app/global/dataSources.service.ts","import { globalModule } from './global.module';\n\nconst dialogDirective = function($timeout, $q) {\n  return {\n    link: (scope, elem) => {\n      $timeout(() => elem.addClass('active'));\n      elem.data('promise', $q((resolve, reject) => {\n        scope.yes = () => resolve(true);\n        scope.no = () => reject(false);\n      }));\n    },\n    template: `\n      <div class=\"backdrop\"></div>\n      <div class='wrapper'>\n        <div class=\"content\">\n          <h4 ng-show=\"message\">{{message}}</h4>\n          <div ng-show=\"details\">{{details}}</div>\n    \n          <div style=\"padding-top: 1em;\">\n            <button class=\"btn btn-primary\" ng-click=\"yes()\">{{yesMsg}}</button>\n            <button class=\"btn btn-primary\" ng-click=\"no()\">{{noMsg}}</button>\n          </div>\n        </div>\n      </div>\n`\n  }\n};\n\nglobalModule.directive('dialog', dialogDirective);\n\n\n// WEBPACK FOOTER //\n// ./app/global/dialog.directive.ts","import * as angular from \"angular\";\nimport { globalModule } from './global.module';\n\nexport class DialogService {\n  confirm;\n  \n  constructor($document, $compile, $rootScope) {\n    let body = $document.find(\"body\");\n    let elem = angular.element(\"<div class='dialog' dialog='opts'></div>\");\n\n    this.confirm = (message, details = \"Are you sure?\", yesMsg = \"Yes\", noMsg = \"No\") => {\n      $compile(elem)(angular.extend($rootScope.$new(), {message, details, yesMsg, noMsg}));\n      body.append(elem);\n      return elem.data(\"promise\").finally(() => elem.removeClass('active').remove());\n    }\n  }\n}\n\nglobalModule.service('DialogService', DialogService);\n\n\n// WEBPACK FOOTER //\n// ./app/global/dialog.service.ts","export * from \"./global.module\";\n\nimport \"./appConfig.service\";\nimport \"./auth.service\";\nimport \"./dataSources.service\";\nimport \"./dialog.directive\";\nimport \"./dialog.service\";\nimport \"./requiresAuth.hook\";\n\n\n\n// WEBPACK FOOTER //\n// ./app/global/index.ts","import { globalModule } from './global.module';\n\n/**\n * This file contains a Transition Hook which protects a\n * route that requires authentication.\n *\n * This hook redirects to /login when both:\n * - The user is not authenticated\n * - The user is navigating to a state that requires authentication\n */\nfunction authHookRunBlock($transitions, AuthService) {\n  // Matches if the destination state's data property has a truthy 'requiresAuth' property\n  let requiresAuthCriteria = {\n    to: (state) => state.data && state.data.requiresAuth\n  };\n\n  // Function that returns a redirect for the current transition to the login state\n  // if the user is not currently authenticated (according to the AuthService)\n\n  let redirectToLogin = (transition) => {\n    let AuthService = transition.injector().get('AuthService');\n    let $state = transition.router.stateService;\n    if (!AuthService.isAuthenticated()) {\n      return $state.target('login', undefined, { location: false });\n    }\n  };\n\n  // Register the \"requires auth\" hook with the TransitionsService\n  $transitions.onBefore(requiresAuthCriteria, redirectToLogin, {priority: 10});\n}\n\nglobalModule.run(authHookRunBlock);\n\n\n// WEBPACK FOOTER //\n// ./app/global/requiresAuth.hook.ts","import { homeModule } from './home.module';\n\n/**\n * The controller for the `app` component.\n */\nclass AuthedController {\n  //data\n  emailAddress;\n  isAuthenticated;\n\n  constructor(AppConfig, public AuthService, public $state) {\n    this.emailAddress = AppConfig.emailAddress;\n    this.isAuthenticated = AuthService.isAuthenticated();\n  }\n\n  logout() {\n    let {AuthService, $state} = this;\n    AuthService.logout();\n    // Reload states after authentication change\n    return $state.go('welcome', {}, { reload: true });\n  }\n}\n\n/**\n * This is the main app component for an authenticated user.\n * \n * This component renders the outermost chrome (application header and tabs, the compose  and logout button)\n * It has a `ui-view` viewport for nested states to fill in.\n */\nconst appComponent = {\n  controller: AuthedController,\n  template: `\n    <div class=\"navheader\">\n      <ul ng-if=\"::$ctrl.isAuthenticated\" class=\"nav nav-tabs\">\n    \n        <li ui-sref-active=\"active\"> <a ui-sref=\"mymessages\" role=\"button\"> Messages </a> </li>\n        <li ui-sref-active=\"active\"> <a ui-sref=\"contacts\" role=\"button\"> Contacts </a> </li>\n        <li ui-sref-active=\"active\"> <a ui-sref=\"prefs\" role=\"button\"> Preferences </a> </li>\n    \n        <li class=\"navbar-right\">\n          <button class=\"btn btn-primary fa fa-home\" ui-sref=\"home\"></button>\n          <button style=\"margin-right: 15px;\" class=\"btn btn-primary\" ui-sref=\"mymessages.compose\"><i class=\"fa fa-envelope\"></i> New Message</button>\n        </li>\n    \n        <li class=\"navbar-text navbar-right logged-in-user\" style=\"margin: 0.5em 1.5em;\">\n          <div>\n            {{::$ctrl.emailAddress}} <i class=\"fa fa-chevron-down\"></i>\n            <div class=\"hoverdrop\">\n              <button class=\"btn btn-primary\" ng-click=\"$ctrl.logout()\">Log Out</button>\n            </div>\n          </div>\n        </li>\n    \n      </ul>\n    </div>\n    \n    <div ui-view/>\n`\n};\n\nhomeModule.component('app', appComponent);\n\n\n\n// WEBPACK FOOTER //\n// ./app/home/app.component.ts","import { homeModule } from './home.module';\n\n/**\n * This is the parent state for the entire application.\n *\n * This state's primary purposes are:\n * 1) Shows the outermost chrome (including the navigation and logout for authenticated users)\n * 2) Provide a viewport (ui-view) for a substate to plug into\n */\nconst appState = {\n  name: 'app',\n  redirectTo: 'welcome',\n  component: 'app'\n};\n\n/**\n * This is the 'welcome' state.  It is the default state (as defined by app.js) if no other state\n * can be matched to the URL.\n */\nconst welcomeState = {\n  parent: 'app',\n  name: 'welcome',\n  url: '/welcome',\n  component: 'welcome'\n};\n\n\n/**\n * This is a home screen for authenticated users.\n *\n * It shows giant buttons which activate their respective submodules: Messages, Contacts, Preferences\n */\nconst homeState = {\n  parent: 'app',\n  name: 'home',\n  url: '/home',\n  component: 'home'\n};\n\n\n/**\n * This is the login state.  It is activated when the user navigates to /login, or if a unauthenticated\n * user attempts to access a protected state (or substate) which requires authentication. (see routerhooks/requiresAuth.js)\n *\n * It shows a fake login dialog and prompts the user to authenticate.  Once the user authenticates, it then\n * reactivates the state that the user originally came from.\n */\nconst loginState = {\n  parent: 'app',\n  name: 'login',\n  url: '/login',\n  component: 'login',\n  resolve: { returnTo: returnTo }\n};\n\n/**\n * A resolve function for 'login' state which figures out what state to return to, after a successful login.\n *\n * If the user was initially redirected to login state (due to the requiresAuth redirect), then return the toState/params\n * they were redirected from.  Otherwise, if they transitioned directly, return the fromState/params.  Otherwise\n * return the main \"home\" state.\n */\nfunction returnTo ($transition$): any {\n  if ($transition$.redirectedFrom() != null) {\n    // The user was redirected to the login state (e.g., via the requiresAuth hook when trying to activate contacts)\n    // Return to the original attempted target state (e.g., contacts)\n    return $transition$.redirectedFrom().targetState();\n  }\n\n  let $state = $transition$.router.stateService;\n\n  // The user was not redirected to the login state; they directly activated the login state somehow.\n  // Return them to the state they came from.\n  if ($transition$.from().name !== '') {\n    return $state.target($transition$.from(), $transition$.params(\"from\"));\n  }\n\n  // If the fromState's name is empty, then this was the initial transition. Just return them to the home state\n  return $state.target('home');\n}\n\nhomeModule.config(['$stateProvider', ($stateProvider) => {\n  $stateProvider.state(appState);\n  $stateProvider.state(welcomeState);\n  $stateProvider.state(homeState);\n  $stateProvider.state(loginState);\n}]);\n\n\n\n// WEBPACK FOOTER //\n// ./app/home/app.states.ts","import { homeModule } from './home.module';\n\n// This is a home component for authenticated users.\n// It shows giant buttons which activate their respective submodules: Messages, Contacts, Preferences\nconst homeComponent = {\n  template: `\n    <div class=\"home buttons\">\n      <button ui-sref=\"mymessages\" class=\"btn btn-primary\">\n        <h1><i class=\"fa fa-envelope\"></i></h1>\n        <h1>Messages</h1>\n      </button>\n\n      <button ui-sref=\"contacts\" class=\"btn btn-primary\">\n      <h1><i class=\"fa fa-users\"></i></h1>\n      <h1>Contacts</h1>\n      </button>\n\n      <button ui-sref=\"prefs\" class=\"btn btn-primary\">\n        <h1><i class=\"fa fa-cogs\"></i></h1>\n        <h1>Preferences</h1>\n      </button>\n    </div>\n`};\n\nhomeModule.component('home', homeComponent);\n\n\n\n// WEBPACK FOOTER //\n// ./app/home/home.component.ts","export * from \"./home.module\";\n\nimport \"./app.component\";\nimport \"./app.states\";\nimport \"./home.component\";\nimport \"./login.component\";\nimport \"./welcome.component\";\n\n\n\n// WEBPACK FOOTER //\n// ./app/home/index.ts","import * as angular from 'angular';\n\nimport { homeModule } from './home.module';\nimport { TargetState } from \"@uirouter/core\";\n\n/**\n * The controller for the `login` component\n *\n * The `login` method validates the credentials.\n * Then it sends the user back to the `returnTo` state, which is provided as a resolve data.\n */\nclass LoginController {\n  returnTo: TargetState;\n\n  usernames;\n  credentials;\n  authenticating;\n  errorMessage;\n\n  login;\n\n  constructor(AppConfig, AuthService, $state) {\n    this.usernames = AuthService.usernames;\n\n    this.credentials = {\n      username: AppConfig.emailAddress,\n      password: 'password'\n    };\n\n    this.login = (credentials) => {\n      this.authenticating = true;\n\n      const returnToOriginalState = () => {\n        let state = this.returnTo.state();\n        let params = this.returnTo.params();\n        let options = angular.extend({}, this.returnTo.options(), { reload: true });\n        $state.go(state, params, options);\n      };\n\n      const showError = (errorMessage) =>\n          this.errorMessage = errorMessage;\n\n      AuthService.authenticate(credentials.username, credentials.password)\n          .then(returnToOriginalState)\n          .catch(showError)\n          .finally(() => this.authenticating = false);\n    }\n  }\n}\n\n/**\n * This component renders a faux authentication UI\n *\n * It prompts for the username/password (and gives hints with bouncy arrows)\n * It shows errors if the authentication failed for any reason.\n */\nconst loginComponent = {\n  bindings: { returnTo: '<' },\n\n  controller: LoginController,\n\n  template: `\n    <div class=\"container\">\n      <div class=\"col-md-6 col-md-offset-3 col-sm-8 col-sm-offset-2\">\n        <h3>Log In</h3>\n        <p>(This login screen is for demonstration only... just pick a username, enter 'password' and click <b>\"Log in\"</b>)</p>\n        <hr>\n    \n        <div>\n          <label for=\"username\">Username:</label>\n          <select class=\"form-control\" name=\"username\" id=\"username\"\n            ng-model=\"$ctrl.credentials.username\" ng-options=\"username for username in $ctrl.usernames\"></select>\n          <i style=\"position: relative; bottom: 1.8em; margin-left: 10em; height: 0\"\n              ng-hide=\"$ctrl.credentials.username\" class=\"fa fa-arrow-left bounce-horizontal\"> Choose </i>\n        </div>\n        <br>\n    \n        <div>\n          <label for=\"password\">Password:</label>\n          <input class=\"form-control\" type=\"password\" name=\"password\" ng-model=\"$ctrl.credentials.password\">\n          <i style=\"position: relative; bottom: 1.8em; margin-left: 5em; height: 0\"\n              ng-hide=\"!$ctrl.credentials.username || $ctrl.credentials.password == 'password'\" class=\"fa fa-arrow-left bounce-horizontal\">\n            Enter '<b>password</b>' here\n          </i>\n        </div>\n    \n        <div ng-show=\"$ctrl.errorMessage\" class=\"well error\">{{ $ctrl.errorMessage }}</div>\n    \n        <hr>\n        <div>\n          <button class=\"btn btn-primary\" type=\"button\"\n              ng-disabled=\"$ctrl.authenticating\" ng-click=\"$ctrl.login($ctrl.credentials)\">\n            <i class=\"fa fa-spin fa-spinner\" ng-show=\"$ctrl.authenticating\"></i> <span>Log in</span>\n          </button>\n          <i ng-show=\"$ctrl.credentials.username && $ctrl.credentials.password == 'password'\" style=\"position: relative;\" class=\"fa fa-arrow-left bounce-horizontal\"> Click Me!</i>\n      </div>\n    </div>\n    `\n};\n\nhomeModule.component('login', loginComponent);\n\n\n\n// WEBPACK FOOTER //\n// ./app/home/login.component.ts","import { homeModule } from './home.module';\n\nconst welcomeComponent = {\n  template: `\n    <div class=\"container-fluid\">\n    \n      <h3>UI-Router Sample App</h3>\n    \n      <p>Welcome to the sample app!</p>\n      <p>This is a demonstration app intended to highlight some patterns that can be used within UI-Router.\n        These patterns should help you to to build cohesive, robust apps.  Additionally, this app uses state-vis\n        to show the tree of states, and a transition log visualizer.</p>\n    \n      <h4>App Overview</h4>\n      <p>\n        First, start exploring the application's functionality at a high level by activating\n        one of the three submodules: Messages, Contacts, or Preferences. If you are not already logged in,\n        you will be taken to an authentication screen (the authentication is fake; the password is \"password\")\n        <div>\n          <button class=\"btn btn-primary\" ui-sref=\"mymessages\"><i class=\"fa fa-envelope\"></i><span>Messages</span></button>\n          <button class=\"btn btn-primary\" ui-sref=\"contacts\"><i class=\"fa fa-users\"></i><span>Contacts</span></button>\n          <button class=\"btn btn-primary\" ui-sref=\"prefs\"><i class=\"fa fa-cogs\"></i><span>Preferences</span></button>\n        </div>\n      </p>\n    \n      <h4>Patterns and Recipes</h4>\n      <ul>\n        <li>Require Authentication</li>\n        <li>Previous State</li>\n        <li>Redirect Hook</li>\n        <li>Default Param Values</li>\n      </ul>\n    </div>`\n};\n\nhomeModule.component('welcome', welcomeComponent);\n\n\n\n// WEBPACK FOOTER //\n// ./app/home/welcome.component.ts","/** * This file is the main entry point for the entire app.\n *\n * If the application is being bundled, this is where the bundling process\n * starts.  If the application is being loaded by an es6 module loader, this\n * is the entry point.\n *\n * Point Webpack or SystemJS to this file.\n *\n * This module imports all the different parts of the application and registers them with angular.\n * - Submodules\n *   - States\n *   - Components\n *   - Directives\n *   - Services\n *   - Filters\n *   - Run and Config blocks\n *     - Transition Hooks\n * - 3rd party Libraries and angular1 module\n *\n * Then this module creates the ng-upgrade adapter\n * and bootstraps the hybrid application\n */\n\n// Google analytics\nimport './util/ga';\n\n////////////// HYBRID BOOTSTRAP ///////////////\nimport { Injector } from '@angular/core';\nimport { UpgradeModule } from '@angular/upgrade/static';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { UIRouter, UrlService } from '@uirouter/core';\nimport { visualizer } from '@uirouter/visualizer';\n\nimport { SampleAppModuleAngular } from './angularModule';\nimport { sampleAppModuleAngularJS } from \"./angularJSModule\";\n\n// Using AngularJS config block, call `deferIntercept()`.\n// This tells UI-Router to delay the initial URL sync (until all bootstrapping is complete)\nsampleAppModuleAngularJS.config([ '$urlServiceProvider', ($urlService: UrlService) => $urlService.deferIntercept() ]);\n\n// Manually bootstrap the Angular app\nplatformBrowserDynamic().bootstrapModule(SampleAppModuleAngular).then(platformRef => {\n  const injector: Injector = platformRef.injector;\n  const upgrade = injector.get(UpgradeModule) as UpgradeModule;\n\n  // The DOM must be already be available\n  upgrade.bootstrap(document.body, [sampleAppModuleAngularJS.name]);\n\n  // Intialize the Angular Module (get() any UIRouter service from DI to initialize it)\n  const url: UrlService = injector.get(UIRouter).urlService;\n\n  // Instruct UIRouter to listen to URL changes\n  url.listen();\n  url.sync();\n});\n\n// Show ui-router-visualizer\nsampleAppModuleAngularJS.run(['$uiRouter', ($uiRouter) => visualizer($uiRouter) ]);\n\n\n\n// WEBPACK FOOTER //\n// ./app/main.ts","import * as angular from \"angular\";\nimport { mymessagesModule } from './mymessages.module';\n\n/**\n * The controller for the Compose component\n */\nclass ComposeController {\n  // bound\n  $stateParams;\n  $transition$;\n  \n  // data\n  pristineMessage;\n  message;\n  canExit: boolean;\n\n  constructor(public $state, public DialogService, public AppConfig, public Messages) { }\n\n  /**\n   * Create our message's model using the current user's email address as 'message.from'\n   * Then extend it with all the properties from (non-url) state parameter 'message'.\n   * Keep two copies: the editable one and the original one.\n   * These copies are used to check if the message is dirty.\n   */\n  $onInit() {\n    this.pristineMessage = angular.extend({from: this.AppConfig.emailAddress}, this.$stateParams.message);\n    this.message = angular.copy(this.pristineMessage);\n  }\n\n  /**\n   * Checks if the edited copy and the pristine copy are identical when the state is changing.\n   * If they are not identical, the allows the user to confirm navigating away without saving.\n   */\n  uiCanExit() {\n    if (this.canExit || angular.equals(this.pristineMessage, this.message)) {\n        return true;\n    }\n\n    var message = 'You have not saved this message.';\n    var question = 'Navigate away and lose changes?';\n    return this.DialogService.confirm(message, question, \"Yes\", \"No\");\n  }\n\n  /**\n   * Navigates back to the previous state.\n   *\n   * - Checks the $transition$ which activated this controller for a 'from state' that isn't the implicit root state.\n   * - If there is no previous state (because the user deep-linked in, etc), then go to 'mymessages.messagelist'\n   */\n  gotoPreviousState() {\n    let $transition$ = this.$transition$;\n    let hasPrevious = !!$transition$.from().name;\n    let state = hasPrevious ? $transition$.from() : \"mymessages.messagelist\";\n    let params = hasPrevious ? $transition$.params(\"from\") : {};\n    this.$state.go(state, params);\n  };\n\n  /** \"Send\" the message (save to the 'sent' folder), and then go to the previous state */\n  send(message) {\n    this.Messages.save(angular.extend(message, {date: new Date(), read: true, folder: 'sent'}))\n        .then(() => this.canExit = true)\n        .then(() => this.gotoPreviousState());\n  };\n\n  /** Save the message to the 'drafts' folder, and then go to the previous state */\n  save(message) {\n    this.Messages.save(angular.extend(message, {date: new Date(), read: true, folder: 'drafts'}))\n        .then(() => this.canExit = true)\n        .then(() => this.gotoPreviousState());\n  }\n}\n\n/**\n * This component composes a message\n *\n * The message might be new, a saved draft, or a reply/forward.\n * A Cancel button discards the new message and returns to the previous state.\n * A Save As Draft button saves the message to the \"drafts\" folder.\n * A Send button sends the message\n */\nconst composeComponent = {\n  bindings: { $stateParams: '<', $transition$: '<' },\n\n  controller: ComposeController,\n\n  template: `\n    <div class=\"compose\">\n      <div class=\"header\">\n        <div class=\"flex-h\"> <label>Recipient</label> <input type=\"text\" id=\"to\" name=\"to\" ng-model=\"$ctrl.message.to\"> </div>\n        <div class=\"flex-h\"> <label>Subject</label> <input type=\"text\" id=\"subject\" name=\"subject\" ng-model=\"$ctrl.message.subject\"> </div>\n      </div>\n    \n      <div class=\"body\">\n        <textarea name=\"body\" id=\"body\" ng-model=\"$ctrl.message.body\" cols=\"30\" rows=\"20\"></textarea>\n        \n        <div class=\"buttons\">\n          <!-- Clicking this button brings the user back to the state they came from (previous state) -->\n          <button class=\"btn btn-primary\" ng-click=\"$ctrl.gotoPreviousState()\"><i class=\"fa fa-times-circle-o\"></i><span>Cancel</span></button>\n          <button class=\"btn btn-primary\" ng-click=\"$ctrl.save($ctrl.message)\"><i class=\"fa fa-save\"></i><span>Save as Draft</span></button>\n          <button class=\"btn btn-primary\" ng-click=\"$ctrl.send($ctrl.message)\"><i class=\"fa fa-paper-plane-o\"></i><span>Send</span></button>\n        </div>\n      </div>\n    </div>\n`\n};\n\nmymessagesModule.component('compose', composeComponent);\n\n\n\n// WEBPACK FOOTER //\n// ./app/mymessages/compose.component.ts","import \"./sortMessages.directive\";\n\n\n\n// WEBPACK FOOTER //\n// ./app/mymessages/directives/index.ts","import * as angular from \"angular\";\nimport { mymessagesModule } from '../mymessages.module';\n\n/**\n * A directive (for a table header) which changes the app's sort order\n */\nconst sortMessagesDirective = (AppConfig) => {\n  return {\n    restrict: 'A',\n    link: function(scope, elem, attrs) {\n      let col = attrs['sortMessages'];\n      if (!col) return;\n      let chevron = angular.element(\"<i style='padding-left: 0.25em' class='fa'></i>\");\n      elem.append(chevron);\n\n      elem.on(\"click\", (evt) => AppConfig.sort = (AppConfig.sort === `+${col}`) ? `-${col}` : `+${col}`);\n      scope.$watch(() => AppConfig.sort, (newVal) => {\n        chevron.toggleClass(\"fa-sort-asc\", newVal == `+${col}`);\n        chevron.toggleClass(\"fa-sort-desc\", newVal == `-${col}`);\n      });\n    }\n  }\n};\n\nmymessagesModule.directive('sortMessages', sortMessagesDirective);\n\n\n\n// WEBPACK FOOTER //\n// ./app/mymessages/directives/sortMessages.directive.ts","import \"./messageBody.filter\";\n\n\n// WEBPACK FOOTER //\n// ./app/mymessages/filters/index.ts","import { mymessagesModule } from '../mymessages.module';\n\n/** Angular filter to format fake emails as HTML*/\nconst messageBody = function($sce) {\n  return (msgText = '') => $sce.trustAsHtml(msgText.split(/\\n/).map(p => `<p>${p}</p>`).join('\\n'));\n};\n\nmymessagesModule.filter('messageBody', messageBody);\n\n\n// WEBPACK FOOTER //\n// ./app/mymessages/filters/messageBody.filter.ts","import { mymessagesModule } from './mymessages.module';\n\n/**\n * Renders a list of folders\n */\nconst folderListComponent = {\n  bindings: {folders: '<'},\n\n  template: `\n    <!-- Renders a list of folders -->\n    <div class=\"folderlist\">\n      <ul class=\"selectlist list-unstyled\">\n  \n        <!-- Highlight the selected folder:\n            When the current state matches the ui-sref's state (and its parameters)\n            ui-sref-active applies the 'selected' class to the li element -->\n        <li class=\"folder\" ui-sref-active=\"selected\" ng-repeat=\"folder in $ctrl.folders\" >\n          <!-- This ui-sref is a relative link to the 'mymessages.messagelist' substate. It provides the\n              'folderId' parameter value from the current folder's .id property -->\n          <a ui-sref=\".messagelist({folderId: folder._id})\"><i class=\"fa\"></i>{{folder._id}}</a>\n        </li>\n      </ul>\n    </div>\n`};\n\nmymessagesModule.component('folderList', folderListComponent);\n\n\n\n// WEBPACK FOOTER //\n// ./app/mymessages/folderList.component.ts","export * from \"./mymessages.module\";\n\nimport \"./compose.component\";\nimport \"./folderList.component\";\nimport \"./message.component\";\nimport \"./messageList.component\";\nimport \"./messageTable.component\";\nimport \"./mymessages.component\";\nimport \"./mymessages.states\";\n\nimport \"./directives/index\";\nimport \"./filters/index\";\nimport \"./services/index\";\n\n\n\n// WEBPACK FOOTER //\n// ./app/mymessages/index.ts","import {setProp} from \"../util/util\";\nimport { mymessagesModule } from './mymessages.module';\n\n\n/** Helper function to prefix a message with \"fwd: \" or \"re: \" */\nconst prefixSubject = (prefix, message) => prefix + message.subject;\n/** Helper function which quotes an email message */\nconst quoteMessage = (message) => `\n\n\n\n---------------------------------------\nOriginal message:\nFrom: ${message.from}\nDate: ${message.date}\nSubject: ${message.subject}\n\n${message.body}`;\n\n/** Helper function to make a response message object */\nconst makeResponseMsg = (subjectPrefix, origMsg) => ({\n  from: origMsg.to,\n  to: origMsg.from,\n  subject: prefixSubject(subjectPrefix, origMsg),\n  body: quoteMessage(origMsg)\n});\n\n\n/**\n * The controller for the Message component\n */\nclass MessageController {\n  // bound\n  folder;\n  message;\n  nextMessageGetter;\n  \n  // data\n  actions;\n\n  constructor(public $state, public DialogService, public Messages) { }\n\n  /**\n   * When the user views a message, mark it as read and save (PUT) the resource.\n   *\n   * Apply the available actions for the message, depending on the folder the message belongs to.\n   */\n  $onInit() {\n    this.message.read = true;\n    this.Messages.put(this.message);\n\n    this.actions = this.folder.actions.reduce((obj, action) => setProp(obj, action, true), {});\n  }\n\n  /**\n   * Compose a new message as a reply to this one\n   */\n  reply(message) {\n    let replyMsg = makeResponseMsg(\"Re: \", message);\n    this.$state.go('mymessages.compose', { message: replyMsg });\n  };\n\n  /**\n   * Compose a new message as a forward of this one.\n   */\n  forward(message) {\n    let fwdMsg = makeResponseMsg(\"Fwd: \", message);\n    delete fwdMsg.to;\n    this.$state.go('mymessages.compose', { message: fwdMsg });\n  };\n\n  /**\n   * Continue composing this (draft) message\n   */\n  editDraft(message) {\n    this.$state.go('mymessages.compose', { message: message });\n  };\n\n  /**\n   * Delete this message.\n   *\n   * - confirm deletion\n   * - delete the message\n   * - determine which message should be active\n   * - show that message\n   */\n  remove(message) {\n    let nextMessageId = this.nextMessageGetter(message._id);\n    let nextState = nextMessageId ? 'mymessages.messagelist.message' : 'mymessages.messagelist';\n    let params = { messageId: nextMessageId };\n\n    this.DialogService.confirm(\"Delete?\", undefined)\n        .then(() => this.Messages.remove(message))\n        .then(() => this.$state.go(nextState, params, { reload: 'mymessages.messagelist' }));\n  };\n}\n\n/**\n * This component renders a single message\n *\n * Buttons perform actions related to the message.\n * Buttons are shown/hidden based on the folder's context.\n * For instance, a \"draft\" message can be edited, but can't be replied to.\n */\nexport const messageComponent = {\n  bindings: { folder: '<', message: '<', nextMessageGetter: '<' },\n\n  controller: MessageController,\n\n  template: `\n    <div class=\"message\">\n    \n      <div class=\"header\">\n        <div>\n          <h4>{{$ctrl.message.subject}}</h4>\n          <h5>{{$ctrl.message.from}} <i class=\"fa fa-long-arrow-right\"></i> {{$ctrl.message.to}}</h5>\n        </div>\n    \n        <div class=\"line2\">\n          <div>{{$ctrl.message.date | date: 'longDate'}} {{$ctrl.message.date | date: 'mediumTime'}}</div>\n          <div>\n            <button class=\"btn btn-primary\" ng-show=\"$ctrl.actions.edit\" ng-click=\"$ctrl.editDraft($ctrl.message)\"><i class=\"fa fa-pencil\"></i> <span>Edit Draft</span></button>\n            <button class=\"btn btn-primary\" ng-show=\"$ctrl.actions.reply\" ng-click=\"$ctrl.reply($ctrl.message)\"><i class=\"fa fa-reply\"></i> <span>Reply</span></button>\n            <button class=\"btn btn-primary\" ng-show=\"$ctrl.actions.forward\" ng-click=\"$ctrl.forward($ctrl.message)\"><i class=\"fa fa-forward\" ></i> <span>Forward</span></button>\n            <button class=\"btn btn-primary\" ng-show=\"$ctrl.actions.delete\" ng-click=\"$ctrl.remove($ctrl.message)\"><i class=\"fa fa-close\"></i> <span>Delete</span></button>\n          </div>\n        </div>\n      </div>\n    \n      <!-- Pass the raw (plain text) message body through the messageBody filter to format slightly nicer. -->\n      <div class=\"body\" ng-bind-html=\"::$ctrl.message.body | messageBody\"></div>\n    </div>\n`};\n\nmymessagesModule.component('message', messageComponent);\n\n\n\n// WEBPACK FOOTER //\n// ./app/mymessages/message.component.ts","import { mymessagesModule } from './mymessages.module';\n\n/**\n * This component renders a list of messages using the `messageTable` component\n */\nconst messageListComponent = {\n  bindings: { folder: '<', messages: '<' },\n  template: `\n    <div class=\"messages\">\n      <message-table columns=\"$ctrl.folder.columns\" messages=\"$ctrl.messages\"></message-table>\n    </div>\n`};\n\nmymessagesModule.component('messageList', messageListComponent);\n\n\n// WEBPACK FOOTER //\n// ./app/mymessages/messageList.component.ts","import { mymessagesModule } from './mymessages.module';\n\n/**\n * A component that displays a folder of messages as a table\n * \n * If a row is clicked, the details of the message is shown using a relative ui-sref to `.message`.\n * \n * ui-sref-active is used to highlight the selected row.\n * \n * Shows/hides specific columns based on the `columns` input binding.\n */\nconst messageTableComponent = {\n  bindings: { columns: '<', messages: '<' },\n\n  controller: function(AppConfig) {\n    this.AppConfig = AppConfig;\n    this.colVisible = (name) => this.columns.indexOf(name) !== -1;\n  },\n\n  template: `\n    <table>\n      <thead>\n        <tr>\n          <td ng-if=\"::$ctrl.colVisible('read')\"></td>\n          <td ng-if=\"::$ctrl.colVisible('from')\"     sort-messages=\"from\">Sender</td>\n          <td ng-if=\"::$ctrl.colVisible('to')\"       sort-messages=\"to\">Recipient</td>\n          <td ng-if=\"::$ctrl.colVisible('subject')\"  sort-messages=\"subject\">Subject</td>\n          <td ng-if=\"::$ctrl.colVisible('date')\"     sort-messages=\"date\">Date</td>\n        </tr>\n      </thead>\n  \n      <tbody>\n        <tr ng-repeat=\"message in $ctrl.messages | orderBy: $ctrl.AppConfig.sort track by message._id\"\n            ui-sref=\".message({messageId: message._id})\" ui-sref-active=\"active\">\n          <td ng-if=\"::$ctrl.colVisible('read')\"><i class=\"fa fa-circle\" style=\"font-size: 50%\" ng-show=\"!message.read\"></td>\n          <td ng-if=\"::$ctrl.colVisible('from')\">{{ message.from }}</td>\n          <td ng-if=\"::$ctrl.colVisible('to')\">{{ message.to }}</td>\n          <td ng-if=\"::$ctrl.colVisible('subject')\">{{ message.subject }}</td>\n          <td ng-if=\"::$ctrl.colVisible('date')\">{{ message.date | date: \"yyyy-MM-dd\" }}</td>\n        </tr>\n      </tbody>\n  \n    </table>\n`};\n\nmymessagesModule.component('messageTable', messageTableComponent);\n\n\n// WEBPACK FOOTER //\n// ./app/mymessages/messageTable.component.ts","import { mymessagesModule } from './mymessages.module';\n\n/**\n * The main mymessages component.\n *\n * Renders a list of folders, and has two viewports:\n * - messageList: filled with the list of messages for a folder\n * - messagecontent: filled with the contents of a single message.\n */\nconst mymessagesComponent = {\n  bindings: {folders: '<'},\n\n  template: `\n    <div class=\"my-messages\">\n    \n      <!-- Show message folders -->\n      <folder-list folders=\"$ctrl.folders\"></folder-list>\n    \n      <!-- A named view for the list of messages in this folder.  This will be  filled in by the 'mymessages.messagelist' child state -->\n      <div ui-view=\"messagelist\" class=\"messagelist\"> </div>\n    \n    </div>\n    \n    <!-- A named ui-view for a message's contents.  The 'mymessages.messagelist.message' grandchild state plugs into this ui-view -->\n    <div ui-view=\"messagecontent\"></div>\n`};\n\nmymessagesModule.component('mymessages', mymessagesComponent);\n\n\n\n// WEBPACK FOOTER //\n// ./app/mymessages/mymessages.component.ts","import { mymessagesModule } from './mymessages.module';\n\n/**\n * This state allows the user to compose a new message, edit a drafted message, send a message,\n * or save an unsent message as a draft.\n *\n * This state uses view-targeting to take over the ui-view that would normally be filled by the 'mymessages' state.\n */\nconst composeState = {\n  name: 'mymessages.compose',\n  url: '/compose',\n  // Declares that this state has a 'message' parameter, that defaults to an empty object.\n  // Note the parameter does not appear in the URL.\n  params: {\n    message: {}\n  },\n  views: {\n    // Absolutely targets the $default (unnamed) ui-view, two nesting levels down with the composeComponent.\n    \"!$default.$default\": 'compose'\n  }\n};\n\n/**\n * The mymessages state. This is the main state for the mymessages submodule.\n *\n * This state shows the list of folders for the current user. It retrieves the folders from the\n * Folders service.  If a user navigates directly to this state, the state redirects to the 'mymessages.messagelist'.\n */\nconst mymessagesState = {\n  parent: 'app',\n  name: \"mymessages\",\n  url: \"/mymessages\",\n  resolve: {\n    // All the folders are fetched from the Folders service\n    folders: (Folders) => Folders.all()\n  },\n  // If mymessages state is directly activated, redirect the transition to the child state 'mymessages.messagelist'\n  redirectTo: 'mymessages.messagelist',\n  component: 'mymessages',\n  // Mark this state as requiring authentication.  See ../routerhooks/requiresAuth.js.\n  data: { requiresAuth: true }\n};\n\n\n/**\n * This state shows the contents of a single message.\n * It also has UI to reply, forward, delete, or edit an existing draft.\n */\nconst messageState = {\n  name: 'mymessages.messagelist.message',\n  url: '/:messageId',\n  resolve: {\n    // Fetch the message from the Messages service using the messageId parameter\n    message: (Messages, $stateParams) => Messages.get($stateParams.messageId),\n    // Provide the component with a function it can query that returns the closest message id\n    nextMessageGetter: (MessageListUI, messages) => MessageListUI.proximalMessageId.bind(MessageListUI, messages)\n  },\n  views: {\n    // Relatively target the parent-state's parent-state's 'messagecontent' ui-view\n    // This could also have been written using ui-view@state addressing: 'messagecontent@mymessages'\n    // Or, this could also have been written using absolute ui-view addressing: '!$default.$default.messagecontent'\n    \"^.^.messagecontent\": 'message'\n  }\n};\n\n\n/**\n * This state shows the contents (a message list) of a single folder\n */\nconst messageListState = {\n  name: 'mymessages.messagelist',\n  url: '/:folderId',\n  // The folderId parameter is part of the URL.  This params block sets 'inbox' as the default value.\n  // If no parameter value for folderId is provided on the transition, then it will be defaulted to 'inbox'\n  params: {folderId: \"inbox\"},\n  resolve: {\n    // Fetch the current folder from the Folders service, using the folderId parameter\n    folder: (Folders, $stateParams) => Folders.get($stateParams.folderId),\n\n    // The resolved folder object (from the resolve above) is injected into this resolve\n    // The list of message for the folder are fetched from the Messages service\n    messages: (Messages, folder) => Messages.byFolder(folder)\n  },\n  views: {\n    // This targets the \"messagelist\" named ui-view added to the DOM in the parent state 'mymessages'\n    \"messagelist\": 'messageList'\n  }\n};\n\nmymessagesModule.config(['$stateProvider', ($stateProvider) => {\n  $stateProvider.state(composeState);\n  $stateProvider.state(mymessagesState);\n  $stateProvider.state(messageState);\n  $stateProvider.state(messageListState);\n}]);\n\n\n\n// WEBPACK FOOTER //\n// ./app/mymessages/mymessages.states.ts","import \"./messagesListUI.service\";\n\n\n// WEBPACK FOOTER //\n// ./app/mymessages/services/index.ts","import { mymessagesModule } from '../mymessages.module';\n\n/** Provides services related to a message list */\nclass MessageListUI {\n  constructor(public $filter, public AppConfig) { }\n\n  /** This is a UI helper which finds the nearest messageId in the messages list to the messageId parameter */\n  proximalMessageId(messages, messageId) {\n    let sorted = this.$filter(\"orderBy\")(messages, this.AppConfig.sort);\n    let idx = sorted.findIndex(msg => msg._id === messageId);\n    var proximalIdx = sorted.length > idx + 1 ? idx + 1 : idx - 1;\n    return proximalIdx >= 0 ? sorted[proximalIdx]._id : undefined;\n  }\n}\n\nmymessagesModule.service('MessageListUI', MessageListUI);\n\n\n\n// WEBPACK FOOTER //\n// ./app/mymessages/services/messagesListUI.service.ts","import { PrefsComponent } from './prefs.component';\nimport { prefsState } from './prefs.states';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { UIRouterModule } from '@uirouter/angular';\n\nlet PREFS_STATES = [ prefsState ];\n\n/** The NgModule for the Preferences feature */\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    UIRouterModule.forChild({ states: PREFS_STATES })\n  ],\n  declarations: [ PrefsComponent ],\n})\nclass PrefsModule {}\n\nexport {PrefsModule};\n\n\n// WEBPACK FOOTER //\n// ./app/prefs/prefs.module.ts","import { PrefsComponent } from './prefs.component';\n\n/**\n * This state allows the user to set their application preferences\n */\nexport const prefsState = {\n  parent: 'app',\n  name: 'prefs',\n  url: '/prefs',\n  component: PrefsComponent,\n  // Mark this state as requiring authentication.  See ../global/requiresAuth.hook.js.\n  data: { requiresAuth: true }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./app/prefs/prefs.states.ts","import {pushToArr, guid, setProp} from \"./util\";\n\n/**\n * This class simulates a RESTful resource, but the API calls fetch data from\n * Session Storage instead of an HTTP call.\n *\n * Once configured, it loads the initial (pristine) data from the URL provided (using HTTP).\n * It exposes GET/PUT/POST/DELETE-like API that operates on the data.  All the data is also\n * stored in Session Storage.  If any data is modified in memory, session storage is updated.\n * If the browser is refreshed, the SessionStorage object will try to fetch the existing data from\n * the session, before falling back to re-fetching the initial data using HTTP.\n *\n * For an example, please see dataSources.js\n */\nexport class SessionStorage {\n  // data\n  _data;\n  _idProp;\n  _eqFn;\n  \n  /**\n   * Creates a new SessionStorage object\n   *\n   * @param $http Pass in the $http service\n   * @param $timeout Pass in the $timeout service\n   * @param $q Pass in the $q service\n   * @param sessionStorageKey The session storage key. The data will be stored in browser's session storage under this key.\n   * @param sourceUrl The url that contains the initial data.\n   * @param AppConfig Pass in the AppConfig object\n   */\n  constructor($http, public $timeout, public $q, public sessionStorageKey, sourceUrl, public AppConfig) {\n    let data, fromSession = sessionStorage.getItem(sessionStorageKey);\n    // A promise for *all* of the data.\n    this._data = undefined;\n\n    // For each data object, the _idProp defines which property has that object's unique identifier\n    this._idProp = \"_id\";\n\n    // A basic triple-equals equality checker for two values\n    this._eqFn = (l, r) => l[this._idProp] === r[this._idProp];\n\n    if (fromSession) {\n      try {\n        // Try to parse the existing data from the Session Storage API\n        data = JSON.parse(fromSession);\n      } catch (e) {\n        console.log(\"Unable to parse session messages, retrieving intial data.\");\n      }\n    }\n\n    let stripHashKey = (obj) =>\n        setProp(obj, '$$hashKey', undefined);\n\n    // Create a promise for the data; Either the existing data from session storage, or the initial data via $http request\n    this._data = (data ? $q.resolve(data) : $http.get(sourceUrl).then(resp => resp.data))\n        .then(this._commit.bind(this))\n        .then(() => JSON.parse(sessionStorage.getItem(sessionStorageKey)))\n        .then(array => array.map(stripHashKey));\n\n  }\n\n  /** Saves all the data back to the session storage */\n  _commit(data) {\n    sessionStorage.setItem(this.sessionStorageKey, JSON.stringify(data));\n    return this.$q.resolve(data);\n  }\n\n  /** Helper which simulates a delay, then provides the `thenFn` with the data */\n  all(thenFn) {\n    return this.$timeout(() => this._data, this.AppConfig.restDelay).then(thenFn);\n  }\n\n  /** Given a sample item, returns a promise for all the data for items which have the same properties as the sample */\n  search(exampleItem) {\n    let contains = (search, inString) =>\n        (\"\" + inString).indexOf(\"\" + search) !== -1;\n    let matchesExample = (example, item) =>\n        Object.keys(example).reduce((memo, key) => memo && contains(example[key], item[key]), true);\n    return this.all(items =>\n        items.filter(matchesExample.bind(null, exampleItem)));\n  }\n\n  /** Returns a promise for the item with the given identifier */\n  get(id) {\n    return this.all(items =>\n        items.find(item => item[this._idProp] === id));\n  }\n\n  /** Returns a promise to save the item.  It delegates to put() or post() if the object has or does not have an identifier set */\n  save(item) {\n    return item[this._idProp] ? this.put(item) : this.post(item);\n  }\n\n  /** Returns a promise to save (POST) a new item.   The item's identifier is auto-assigned. */\n  post(item) {\n    item[this._idProp] = guid();\n    return this.all(items => pushToArr(items, item)).then(this._commit.bind(this));\n  }\n\n  /** Returns a promise to save (PUT) an existing item. */\n  put(item, eqFn = this._eqFn) {\n    return this.all(items => {\n      let idx = items.findIndex(eqFn.bind(null, item));\n      if (idx === -1) throw Error(`${item} not found in ${this}`);\n      items[idx] = item;\n      return this._commit(items).then(() => item);\n    });\n  }\n\n  /** Returns a promise to remove (DELETE) an item. */\n  remove(item, eqFn = this._eqFn) {\n    return this.all(items => {\n      let idx = items.findIndex(eqFn.bind(null, item));\n      if (idx === -1) throw Error(`${item} not found in ${this}`);\n      items.splice(idx, 1);\n      return this._commit(items).then(() => item);\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./app/util/sessionStorage.ts"],"mappings":";;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;;;;;;;;;;;;;;;ACJA;AACA;;;;;;;;;;;ACDA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDA;AAgBA;AAGA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAZA;AAaA;AAAA;AAtBA;;;;;;;;;;;;;;;;;;;;;;;;;;AChBA;;;AAGA;;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;;;;;;;;;;ACtCA;;;;AAIA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAnCA;AAoCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;;ACpFA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3OA;;;;AAIA;AACA;;;;;;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAwDA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;;;;;;;;AClXA;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;AAEA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;ACjCA;;;;AAIA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5OA;AA6OA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;ACzQA;;;;AAIA;AACA;;;;;;;;;;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAsBA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAnBA;AAoBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;;;;;;;;;;AC1LA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AAwBA;AAAA;AAIA;AAHA;AACA;AACA;AACA;AAAA;AAJA;;;;;;;;;;ACjDA;AACA;AAEA;;AAEA;AACA;AAKA;AAJA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAAA;AApBA;AAsBA;;;;;;;;;;AC3BA;AAEA;;AAEA;AACA;AAIA;AAAA;AAAA;AAAA;AAHA;AACA;AAEA;AAEA;;AAEA;AACA;AACA;AACA;AAEA;;;;;;;AAOA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AA5CA;AA8CA;;;;;;;;;;;;;;;;;;;;ACpDA;AAEA;AAEA;;;;;;;;;;;;;;AAcA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AALA;AAOA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAJA;AAMA;AAAA;AACA;AAAA;AACA;AACA;AAFA;;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAZA;AAcA;AACA;AACA;;;;;;;;;;ACnDA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAcA;AACA;AAEA;;;;;;;;;;AC5BA;AACA;AAEA;AAGA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAbA;AAeA;;;;;;;;;;;;;AClBA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACPA;AAEA;;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;;;;;;;;;;AC/BA;AAEA;;AAEA;AACA;AAKA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;;;;;AAKA;AACA;AACA;AACA;AA2BA;AAEA;;;;;;;;;;AC5DA;AAEA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACtFA;AAEA;AACA;AACA;AACA;AAiBA;AAEA;;;;;;;;;;;;;ACxBA;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;ACNA;AAEA;AAGA;;;;;AAKA;AACA;AAUA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;;;;;AAKA;AACA;AACA;AAEA;AAEA;AAqCA;AAEA;;;;;;;;;;ACpGA;AAEA;AACA;AA8BA;AAEA;;;;;;;;;ACnCA;;;;;;;;;;;;;;;;;;;;;AAqBA;;AAEA;AACA;AAIA;AAGA;AACA;AAGA;AAAA;AAAA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;;;;;;;;;;AC1DA;AACA;AAEA;;AAEA;AACA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;;AAKA;AACA;AACA;AACA;AACA;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;;;;;;;AAOA;AACA;AACA;AAEA;AAEA;AAmBA;AAEA;;;;;;;;;;AC1GA;;;;;;;;;;ACAA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;;;;;;ACxBA;;;;;;;;;;ACAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAEA;;;;;;;;;;ACPA;AAEA;;AAEA;AACA;AACA;AAEA;AAeA;AAEA;;;;;;;;;;;;;ACzBA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;;;;;;;;ACZA;AACA;AAGA;AACA;AACA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AAEA;AACA;AASA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;AAIA;AACA;AACA;AACA;AAEA;AACA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AAAA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;;AAEA;AACA;AACA;AACA;AAAA;AAEA;;;;;;;AAOA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAEA;;;;;;AAMA;AACA;AACA;AAEA;AAEA;AAuBA;AAEA;;;;;;;;;;ACtIA;AAEA;;AAEA;AACA;AACA;AACA;AAIA;AAEA;;;;;;;;;;ACbA;AAEA;;;;;;;;AAQA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AAEA;AAwBA;AAEA;;;;;;;;;;AC7CA;AAEA;;;;;;AAMA;AACA;AACA;AAEA;AAaA;AAEA;;;;;;;;;;AC3BA;AAEA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;AC9FA;;;;;;;;;;ACAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;;;;;;;;;;ACdA;AAMA;AAEA;AASA;AAAA;AAAA;AAAA;AAAA;AAEA;;;;;;;;;;ACpBA;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;ACZA;AAEA;;;;;;;;;;;AAWA;AACA;AAMA;;;;;;;;;AASA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAEA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAxGA;;;;A","sourceRoot":""}